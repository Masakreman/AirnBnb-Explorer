var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.147,1,0.723]],["body/components/AppComponent.html",[0,0.285,1,1.306,2,1.275,3,0.508,4,0.423,5,0.94,6,0.94,7,0.94,8,0.423,9,2.05,10,0.793,11,3.448,12,3.448,13,2.649,14,3.517,15,3.205,16,2.809,17,3.517,18,1.823,19,2.809,20,3.517,21,1.288,22,2.809,23,3.517,24,3.517,25,2.809,26,2.276,27,1.71,28,2.343,29,2.809,30,1.271,31,1.486,32,0.058,33,0.94,34,1.717,35,2.44,36,1.095,37,1.83,38,1.58,39,1.288,40,1.288,41,2.276,42,1.178,43,1.178,44,1.178,45,2.673,46,1.288,47,3.517,48,2.343,49,3.517,50,0.423,51,0.695,52,4.522,53,0.822,54,2.05,55,0.96,56,3.517,57,1.288,58,1.288,59,0.813,60,0.793,61,0.58,62,0.813,63,1.008,64,3.205,65,1.271,66,1.486,67,1.253,68,0.94,69,1.084,70,0.946,71,0.423,72,1.084,73,2.566,74,2.566,75,2.05,76,2.566,77,1.456,78,0.695,79,1.084,80,2.566,81,0.813,82,1.456,83,2.05,84,0.508,85,1.71,86,1.253,87,2.05,88,1.253,89,0.508,90,0.599,91,0.94,92,0.94,93,1.288,94,1.288,95,0.94,96,1.58,97,0.94,98,0.94,99,0.701,100,0.94,101,0.94,102,0.701,103,0.94,104,0.94,105,0.94,106,0.701,107,0.94,108,0.813,109,0.94,110,0.94,111,0.813,112,0.94,113,0.037,114,0.037]],["title/components/AuthButtonComponent.html",[0,0.147,99,0.723]],["body/components/AuthButtonComponent.html",[0,0.267,1,0.667,2,0.928,3,0.483,4,0.403,5,0.894,6,1.547,7,0.894,8,0.403,10,0.773,18,1.785,21,1.244,25,2.714,26,1.928,27,1.547,28,2.264,31,1.436,32,0.057,33,0.894,34,1.659,37,1.812,38,1.244,39,1.244,40,1.244,42,0.667,43,0.667,44,0.667,46,1.244,50,0.403,51,0.672,53,0.913,55,1.154,57,1.244,58,1.244,59,0.774,60,0.773,61,0.697,62,0.774,63,1.102,66,1.436,70,0.909,71,0.403,72,1.031,78,0.672,79,1.031,84,0.836,85,3.46,86,2.063,89,0.483,90,0.913,92,0.894,93,1.244,94,1.244,95,0.894,96,1.547,97,0.894,98,0.894,99,1.288,100,1.873,101,0.894,102,0.667,103,1.431,104,0.894,105,0.894,106,0.667,107,0.894,108,0.774,109,0.894,110,0.894,111,0.774,112,0.894,113,0.036,114,0.036,115,1.95,116,3.332,117,3.674,118,2.815,119,2.714,120,3.375,121,3.398,122,3.398,123,4.718,124,2.714,125,3.398,126,5.17,127,3.398,128,3.398,129,4.442,130,2.217,131,3.122,132,3.398,133,3.256,134,2.442,135,3.674,136,2.442,137,3.908,138,1.651,139,3.908,140,2.442,141,2.442,142,3.398,143,2.442,144,2.442,145,2.442,146,1.627,147,1.908,148,4.225,149,3.398]],["title/components/AuthUserComponent.html",[0,0.147,102,0.723]],["body/components/AuthUserComponent.html",[0,0.242,1,0.823,2,1.069,3,0.596,4,0.497,5,1.103,6,1.103,7,1.103,8,0.497,10,0.596,18,1.654,27,1.103,31,1.273,32,0.057,33,1.103,37,1.884,38,1.433,39,1.433,40,1.433,42,0.823,43,0.823,44,0.823,46,1.433,50,0.497,51,0.774,53,0.914,55,1.069,59,0.955,60,0.86,61,0.646,62,0.955,63,1.016,70,0.91,71,0.497,78,0.596,84,0.596,89,0.596,90,0.704,92,1.103,93,1.433,94,1.433,95,1.103,96,1.685,97,1.103,98,1.103,99,0.823,100,1.79,101,1.103,102,1.257,103,1.868,104,1.103,105,1.103,106,0.823,107,1.103,108,0.955,109,1.103,110,1.103,111,0.955,112,1.103,113,0.041,114,0.041,116,3.258,119,3.474,124,3.474,130,2.467,131,3.474,133,2.608,135,3.906,146,2.008,147,1.912,150,2.407,151,4.89,152,3.915,153,3.014,154,3.014,155,3.677,156,3.474,157,3.014,158,2.407,159,2.608,160,1.912,161,3.915,162,3.915]],["title/injectables/DataService.html",[35,1.293,163,0.969]],["body/injectables/DataService.html",[3,0.483,4,0.403,8,0.403,10,0.836,11,1.953,32,0.058,35,1.66,50,0.403,53,0.571,55,1.154,59,1.339,60,0.836,61,0.697,62,1.339,63,0.987,65,1.457,70,0.773,71,0.403,78,0.483,88,1.909,89,0.483,90,0.987,91,0.895,113,0.036,114,0.036,159,2.266,160,1.66,163,1.245,164,1.629,165,1.953,166,1.929,167,3.401,168,3.401,169,3.401,170,2.717,171,3.401,172,2.717,173,4.6,174,4.6,175,4.6,176,4.6,177,1.245,178,3.401,179,3.401,180,3.401,181,1.953,182,2.398,183,2.444,184,2.717,185,2.717,186,2.064,187,2.717,188,3.401,189,2.132,190,4.6,191,2.444,192,1.929,193,1.66,194,3.401,195,3.911,196,3.401,197,2.398,198,3.401,199,1.684,200,2.677,201,3.401,202,3.401,203,2.444,204,3.401,205,3.401,206,4.444,207,3.401,208,3.401,209,3.401,210,2.444,211,3.401,212,3.377,213,3.401,214,4.228,215,3.911,216,3.911,217,3.911,218,3.911,219,3.911,220,3.911,221,3.911,222,3.911,223,3.911,224,3.911,225,3.911,226,4.6,227,3.911,228,3.911,229,3.911,230,3.401,231,2.444,232,2.444,233,2.444,234,2.444,235,2.444,236,3.401,237,2.717,238,1.387,239,1.953,240,2.444,241,4.228,242,2.444,243,1.929,244,1.929,245,2.444,246,2.444,247,2.444,248,2.444,249,2.444,250,2.444,251,2.444,252,2.444]],["title/components/GridComponent.html",[0,0.147,44,0.723]],["body/components/GridComponent.html",[0,0.247,1,0.499,2,0.751,3,0.361,4,0.301,5,0.669,6,0.669,7,0.669,8,0.301,10,0.655,18,1.163,21,1.008,27,0.669,30,1.168,32,0.058,33,0.669,34,1.344,36,1.265,37,1.696,38,1.008,39,1.883,40,1.008,41,1.879,42,0.499,43,0.499,44,1.213,46,1.008,48,1.834,50,0.301,51,0.544,53,0.643,55,1.213,57,1.008,58,1.008,59,0.579,60,0.782,61,0.733,62,0.579,63,0.971,65,1.543,67,0.892,68,1.523,69,1.757,70,0.822,71,0.301,72,0.772,77,1.036,78,0.544,79,1.4,81,1.254,82,2.898,84,0.361,86,1.344,87,2.946,89,0.361,90,0.427,91,0.669,92,0.669,93,1.008,94,1.008,95,0.669,96,1.35,97,0.669,98,0.669,99,0.499,100,0.669,101,0.669,102,0.499,103,0.669,104,0.669,105,0.669,106,0.499,107,0.669,108,0.579,109,0.669,110,0.669,111,0.579,112,0.669,113,0.029,114,0.029,130,1.879,147,0.892,166,1.562,177,1.008,189,1.4,192,1.562,199,0.669,253,1.459,254,2.753,255,1.558,256,1.834,257,3.7,258,2.753,259,2.22,260,3.957,261,3.688,262,3.688,263,3.688,264,1.672,265,4.159,266,2.753,267,2.753,268,2.753,269,2.753,270,3.313,271,2.753,272,2.753,273,3.313,274,2.636,275,3.313,276,3.313,277,2.636,278,1.459,279,2.753,280,1.826,281,1.834,282,1.834,283,1.834,284,2.199,285,1.217,286,1.826,287,2.207,288,2.199,289,2.753,290,3.688,291,4.87,292,2.753,293,4.768,294,4.705,295,1.562,296,1.562,297,1.344,298,2.753,299,2.753,300,2.753,301,2.753,302,2.753,303,2.753,304,2.753,305,2.753,306,1.826,307,2.753,308,2.199,309,2.753,310,2.199,311,3.313,312,3.313,313,3.313,314,3.313,315,3.313,316,3.313,317,1.826,318,2.753,319,1.826,320,2.753,321,3.688,322,1.826,323,3.688,324,1.801,325,1.558,326,2.753,327,2.753,328,1.834,329,1.163,330,2.753,331,1.826,332,2.199,333,2.199,334,1.826,335,1.459,336,1.826,337,1.826,338,1.459,339,1.826,340,1.826,341,1.459,342,1.826,343,0.772]],["title/components/HomeComponent.html",[0,0.147,106,0.723]],["body/components/HomeComponent.html",[0,0.244,1,0.58,2,0.84,3,0.42,4,0.35,5,0.778,6,0.778,7,0.778,8,0.35,10,0.42,18,1.3,27,0.778,30,1.522,31,0.897,32,0.058,33,0.778,36,1.267,37,1.758,38,1.453,39,1.453,40,1.127,42,0.58,43,0.58,44,0.58,46,1.127,50,0.35,51,0.609,53,0.719,55,1.199,59,0.673,60,0.716,61,0.508,62,0.673,63,0.719,65,1.558,68,1.325,69,1.529,70,0.716,71,0.35,77,1.205,78,0.42,79,1.3,81,1.335,89,0.42,90,0.496,91,0.778,92,0.778,93,1.127,94,1.127,95,0.778,96,1.453,97,0.778,98,0.778,99,0.58,100,0.778,101,0.778,102,0.58,103,0.778,104,0.778,105,0.778,106,1.083,107,0.778,108,0.673,109,0.778,110,0.778,111,0.673,112,0.778,113,0.032,114,0.032,118,2.051,130,2.053,138,1.3,147,1.037,156,2.459,166,2.39,170,1.697,177,1.127,192,1.746,199,1.453,255,1.3,264,1.3,277,2.644,278,1.697,281,2.051,282,2.051,285,2.927,287,2.644,297,2.475,310,3.17,324,1.503,332,2.459,333,2.459,335,2.459,343,1.529,344,1.697,345,3.62,346,2.459,347,3.078,348,4.918,349,4.803,350,4.393,351,2.252,352,3.969,353,3.078,354,3.078,355,2.906,356,2.57,357,3.969,358,2.124,359,3.078,360,3.078,361,3.078,362,3.62,363,3.078,364,3.078,365,2.124,366,3.078,367,3.078,368,3.078,369,3.078,370,4.531,371,2.124,372,2.124,373,2.124,374,1.205,375,1.205,376,1.205,377,3.078,378,2.124,379,3.62,380,2.124,381,1.697,382,2.124,383,2.124,384,2.124,385,2.124,386,3.078,387,3.078,388,3.078,389,3.078,390,1.746,391,3.078,392,3.078,393,1.503,394,1.503,395,1.503,396,3.078,397,3.078,398,3.078,399,3.078]],["title/components/ListingsComponent.html",[0,0.147,42,0.723]],["body/components/ListingsComponent.html",[0,0.243,1,0.473,2,0.722,3,0.343,4,0.286,5,0.634,6,0.634,7,0.634,8,0.286,10,0.634,21,0.968,27,1.174,30,1.575,32,0.058,33,0.634,34,1.291,35,2.329,36,1.339,37,1.673,38,0.968,40,0.968,41,1.82,42,1.157,43,0.473,44,0.473,45,2.137,46,0.968,48,1.762,50,0.286,51,0.523,53,0.618,54,1.384,55,1.193,57,0.968,58,0.968,59,0.549,60,0.634,61,0.638,62,0.549,63,0.952,64,2.562,65,1.527,66,1.355,68,0.634,69,0.732,70,0.71,71,0.286,72,0.732,75,1.384,77,0.983,78,0.523,79,0.732,81,1.291,86,1.291,89,0.343,90,0.618,92,0.634,93,0.968,94,0.968,95,0.634,96,1.314,97,0.634,98,0.634,99,0.473,100,0.634,101,0.634,102,0.473,103,0.634,104,0.634,105,0.634,106,0.473,107,0.634,108,0.549,109,0.634,110,0.634,111,0.549,112,0.634,113,0.028,114,0.028,118,1.762,133,2.576,158,1.384,159,2.392,166,2.405,177,0.968,189,1.722,192,2.312,193,1.291,199,1.174,255,1.633,259,1.291,277,2.576,281,1.762,282,1.762,283,1.762,284,2.113,285,2.137,325,2.113,329,1.722,338,2.562,341,1.384,343,1.355,381,2.868,393,1.753,394,1.291,395,1.291,400,1.384,401,3.59,402,2.645,403,1.5,404,4.57,405,4.371,406,3.59,407,2.645,408,2.645,409,2.645,410,3.866,411,3.866,412,3.866,413,2.645,414,1.733,415,3.59,416,2.037,417,1.517,418,1.733,419,2.645,420,2.645,421,2.645,422,1.733,423,3.59,424,2.645,425,1.733,426,1.291,427,4.712,428,2.645,429,2.645,430,4.371,431,1.733,432,1.733,433,3.208,434,1.733,435,3.59,436,1.5,437,1.5,438,2.037,439,2.645,440,4.075,441,2.037,442,2.645,443,2.037,444,2.645,445,1.5,446,4.075,447,1.117,448,4.075,449,2.645,450,4.075,451,2.113,452,2.645,453,2.645,454,1.5,455,2.645,456,2.645]],["title/components/NavComponent.html",[0,0.147,43,0.723]],["body/components/NavComponent.html",[0,0.265,1,0.641,2,1.134,3,0.464,4,0.387,5,0.859,6,0.859,7,0.859,8,0.387,10,0.654,12,2.64,13,1.875,15,2.64,16,2.64,18,1.396,19,2.64,26,1.875,27,1.773,28,2.202,30,1.047,31,1.396,32,0.058,33,0.859,37,1.797,38,1.21,39,1.21,40,1.21,41,2.17,42,0.641,43,1.195,44,0.641,45,2.549,46,1.21,60,0.654,70,0.821,71,0.387,72,0.992,78,0.654,79,0.992,82,1.875,83,2.64,84,0.654,85,2.202,86,2.028,89,0.464,92,0.859,93,1.21,94,1.21,95,0.859,96,1.52,97,0.859,98,0.859,99,1.24,100,0.859,101,0.859,102,1.24,103,1.401,104,0.859,105,0.859,106,0.641,107,0.859,108,0.744,109,0.859,110,0.859,111,0.744,112,0.859,113,0.035,114,0.035,116,3.026,117,2.64,120,2.64,212,4.002,264,1.396,328,2.202,346,2.64,447,1.919,457,1.875,458,3.305,459,4.541,460,3.305,461,3.305,462,4.153,463,3.305,464,2.347,465,2.347,466,4.541,467,2.64,468,4.541,469,3.305,470,3.826,471,4.541,472,3.305,473,4.153,474,1.875,475,3.305,476,4.153,477,4.153,478,3.305,479,3.305,480,4.153,481,3.826,482,4.764,483,4.153,484,3.305,485,3.305,486,3.305,487,3.305,488,3.305,489,4.153,490,4.153,491,1.875,492,3.305,493,3.305,494,3.305,495,4.153,496,3.305,497,3.826,498,3.305,499,3.305,500,3.305,501,2.347,502,1.875,503,3.305,504,3.305,505,2.347,506,2.347,507,3.826,508,2.347,509,2.347]],["title/interfaces/PriceRangeResponse.html",[510,1.118,511,1.293]],["body/interfaces/PriceRangeResponse.html",[3,0.385,4,0.321,8,0.321,10,0.385,21,0.713,30,1.513,32,0.058,36,0.94,50,0.321,51,0.571,53,0.455,57,0.713,58,0.713,60,0.681,61,0.628,63,0.455,65,1.206,66,0.823,67,2.457,70,0.571,71,0.321,78,0.571,81,1.206,84,0.385,88,1.41,89,0.681,90,1.22,91,0.713,113,0.03,114,0.03,138,1.22,160,1.681,163,1.26,177,0.713,182,1.953,186,1.859,189,2.221,193,0.951,197,1.105,199,1.693,200,2.837,238,1.105,243,2.624,244,2.16,255,2.098,259,0.951,264,0.823,295,1.105,296,1.105,297,1.859,324,1.41,325,1.799,329,0.823,343,0.823,351,1.105,355,1.953,356,1.638,374,2.569,375,1.638,376,1.105,390,2.16,393,1.41,394,1.41,395,0.951,403,1.638,416,1.105,417,1.454,426,0.951,436,1.638,437,1.638,438,1.638,441,1.638,443,1.638,445,1.638,447,0.823,454,1.105,474,1.105,491,1.105,502,1.105,510,1.22,511,1.41,512,1.297,513,1.105,514,2.537,515,1.859,516,1.297,517,1.297,518,3.353,519,1.297,520,1.297,521,1.297,522,1.297,523,2.838,524,1.297,525,1.297,526,1.297,527,1.297,528,1.297,529,1.297,530,1.297,531,1.297,532,1.105,533,1.297,534,1.297,535,1.297,536,2.709,537,1.924,538,1.297,539,1.297,540,1.297,541,1.924,542,2.537,543,1.297,544,1.297,545,1.297,546,3.136,547,1.924,548,1.297,549,1.924,550,1.924,551,1.297,552,1.297,553,1.297,554,2.537,555,1.924,556,1.297,557,1.297,558,1.297,559,1.297,560,1.297,561,1.297,562,1.297,563,1.297,564,1.297,565,1.297,566,1.297,567,1.297,568,1.924,569,1.924,570,1.924,571,1.297,572,1.924,573,1.297,574,1.297,575,1.297,576,1.924,577,1.297,578,1.924,579,1.924,580,1.924,581,1.297,582,1.297,583,1.924,584,1.924,585,1.924,586,1.297,587,1.297,588,1.297,589,1.297,590,1.297,591,1.297,592,1.297,593,1.297,594,1.297,595,1.297,596,1.297,597,1.297,598,1.297,599,1.297,600,1.297,601,1.297,602,1.297,603,1.297,604,1.297,605,1.297,606,1.297,607,1.297,608,1.297,609,1.297,610,1.297,611,1.297,612,1.297,613,1.297,614,1.297,615,1.297]],["title/interfaces/PriceRangeSummary.html",[510,1.118,515,1.293]],["body/interfaces/PriceRangeSummary.html",[3,0.373,4,0.311,8,0.311,10,0.373,21,0.691,30,1.552,32,0.058,36,0.922,50,0.311,51,0.558,53,0.441,57,0.691,58,0.691,60,0.668,61,0.77,63,0.441,65,0.598,66,0.797,67,2.472,70,0.558,71,0.311,78,0.558,81,1.188,84,0.373,88,1.377,89,0.668,90,1.216,91,0.691,113,0.03,114,0.03,138,1.192,160,1.649,163,1.237,177,0.691,182,1.916,186,1.83,189,2.238,193,0.921,197,1.07,199,1.679,200,2.823,238,1.07,243,2.602,244,2.126,255,2.087,259,0.921,264,0.797,295,1.07,296,1.07,297,1.83,324,1.377,325,1.779,329,0.797,343,0.797,351,1.07,355,2.388,356,1.6,374,2.545,375,2.276,376,2.126,390,2.126,393,1.377,394,1.377,395,0.921,403,1.6,416,1.07,417,1.427,426,0.921,436,1.6,437,1.6,438,1.6,441,1.6,443,1.6,445,1.6,447,0.797,454,1.07,474,1.07,491,1.07,502,2.126,510,1.192,511,0.921,512,1.257,513,1.07,514,1.257,515,1.649,516,2.497,517,2.251,518,3.337,519,1.257,520,1.257,521,1.257,522,1.257,523,2.805,524,1.257,525,1.257,526,1.257,527,1.257,528,1.257,529,1.257,530,1.257,531,1.257,532,1.07,533,1.257,534,1.257,535,1.257,536,2.673,537,1.879,538,1.257,539,1.257,540,1.257,541,1.879,542,2.497,543,1.257,544,1.257,545,1.257,546,3.112,547,1.879,548,1.257,549,1.879,550,1.879,551,1.257,552,1.257,553,1.257,554,2.497,555,1.879,556,1.257,557,1.257,558,1.257,559,1.257,560,1.257,561,1.257,562,1.257,563,1.257,564,1.257,565,1.257,566,1.257,567,1.257,568,1.879,569,1.879,570,1.879,571,1.257,572,1.879,573,1.257,574,1.257,575,1.257,576,1.879,577,1.257,578,1.879,579,1.879,580,1.879,581,1.257,582,1.257,583,1.879,584,1.879,585,1.879,586,1.257,587,1.257,588,1.257,589,1.257,590,1.257,591,1.257,592,1.257,593,1.257,594,1.257,595,1.257,596,1.257,597,1.257,598,1.257,599,1.257,600,1.257,601,1.257,602,1.257,603,1.257,604,1.257,605,1.257,606,1.257,607,1.257,608,1.257,609,1.257,610,1.257,611,1.257,612,1.257,613,1.257,614,1.257,615,1.257,616,2.821]],["title/injectables/WebService.html",[36,0.723,163,0.969]],["body/injectables/WebService.html",[3,0.306,4,0.255,8,0.255,10,0.856,21,0.886,30,1.574,32,0.058,36,1.001,50,0.255,51,0.479,53,0.565,55,1.252,57,0.886,58,0.886,59,1.288,60,0.876,61,0.744,62,1.288,63,0.565,65,0.49,66,1.023,67,2.425,68,0.886,69,1.023,70,0.479,71,0.255,78,0.479,81,1.07,84,0.479,88,1.649,89,0.59,90,1.19,91,0.566,113,0.025,114,0.025,138,1.023,160,1.9,163,1.093,164,1.03,177,1.237,181,1.234,182,2.081,186,1.986,189,2.204,193,1.182,197,0.877,199,1.786,200,2.857,238,0.877,243,2.455,244,1.916,255,2.171,259,1.182,264,1.023,295,0.877,296,0.877,297,1.9,324,1.457,325,1.907,329,0.653,343,1.023,351,1.693,355,2.081,356,1.916,374,2.724,375,1.693,376,0.877,390,2.388,393,1.182,394,1.182,395,0.755,403,1.916,416,1.373,417,1.427,426,1.182,436,1.373,437,1.373,438,1.373,441,1.373,443,1.373,445,1.373,447,1.023,454,0.877,474,1.373,491,0.877,502,0.877,510,1.023,511,0.755,513,0.877,514,1.03,515,1.182,516,1.03,517,1.03,518,3.404,519,1.613,520,1.613,521,1.613,522,1.613,523,2.95,524,1.613,525,1.989,526,1.613,527,1.613,528,1.989,529,1.613,530,1.613,531,1.613,532,1.373,533,1.03,534,1.03,535,1.03,536,2.95,537,2.251,538,1.613,539,1.03,540,1.03,541,1.613,542,2.805,543,1.613,544,1.03,545,1.613,546,3.199,547,1.613,548,1.03,549,1.613,550,1.613,551,1.03,552,1.613,553,1.613,554,2.251,555,1.613,556,1.03,557,1.03,558,1.03,559,1.03,560,1.613,561,1.613,562,1.03,563,1.613,564,2.251,565,1.03,566,1.613,567,1.613,568,2.251,569,1.613,570,1.613,571,1.03,572,1.613,573,1.03,574,1.03,575,1.03,576,1.613,577,1.03,578,1.613,579,1.613,580,1.613,581,1.03,582,1.03,583,1.613,584,1.613,585,1.613,586,1.03,587,1.613,588,1.03,589,1.03,590,1.03,591,1.03,592,1.03,593,1.03,594,1.03,595,1.03,596,1.03,597,1.03,598,1.03,599,1.03,600,1.03,601,1.03,602,1.03,603,1.03,604,1.613,605,1.613,606,1.613,607,1.613,608,1.03,609,1.613,610,1.613,611,1.613,612,2.251,613,1.03,614,2.251,615,1.03,617,2.421,618,2.421,619,2.421,620,2.421,621,2.421,622,2.421,623,2.421,624,1.545,625,1.545,626,1.545,627,1.545,628,1.545,629,1.545,630,1.545,631,1.545,632,1.545,633,1.545]],["title/coverage.html",[634,2.869]],["body/coverage.html",[0,0.29,1,0.982,8,0.593,9,2.874,32,0.057,35,1.757,36,0.982,42,0.982,43,0.982,44,0.982,61,0.593,99,0.982,102,0.982,106,0.982,108,1.14,113,0.046,114,0.046,115,2.874,150,2.874,163,1.602,165,2.874,253,2.874,328,3.481,344,2.874,400,2.874,417,1.52,447,1.849,457,2.874,510,1.849,511,1.757,513,2.676,515,1.757,634,2.874,635,3.598,636,3.598,637,3.598,638,4.377,639,3.598,640,2.874,641,3.598,642,2.874,643,4.377,644,4.377,645,3.598,646,3.598,647,3.598,648,3.598,649,3.598,650,3.598,651,3.598,652,3.598,653,3.598,654,3.598,655,3.598,656,3.598]],["title/dependencies.html",[657,1.774,658,2.539]],["body/dependencies.html",[32,0.057,71,0.624,72,1.598,82,2.146,84,0.892,113,0.047,114,0.047,146,2.521,147,1.847,239,3.022,257,3.022,658,3.022,659,3.783,660,5.272,661,3.783,662,3.783,663,3.783,664,3.783,665,3.783,666,4.511,667,3.604,668,3.783,669,3.783,670,3.783,671,3.783,672,3.783,673,3.783,674,3.783,675,3.783,676,3.783,677,3.783,678,3.783,679,3.783,680,3.022,681,3.783]],["title/index.html",[50,0.366,172,1.774,682,2.221]],["body/index.html",[0,0.252,2,0.902,4,0.545,13,2.355,31,2.116,32,0.044,68,1.52,84,0.942,111,1.047,113,0.044,114,0.044,155,2.639,237,3.316,256,2.766,288,2.639,325,1.396,329,1.396,417,1.396,426,1.613,451,2.639,467,2.639,667,2.639,683,3.304,684,4.54,685,3.304,686,4.908,687,2.639,688,3.304,689,4.152,690,4.54,691,3.304,692,3.304,693,4.908,694,5.009,695,3.304,696,4.152,697,3.304,698,3.304,699,3.304,700,3.304,701,3.304,702,3.304,703,3.304,704,3.304,705,4.152,706,3.304,707,3.304,708,3.304,709,4.54,710,3.304,711,3.304,712,3.304,713,3.304,714,3.304,715,3.304,716,4.54,717,3.304,718,3.304,719,3.304,720,3.304,721,3.304,722,2.639,723,3.304,724,3.304,725,4.152,726,4.54,727,3.304,728,3.304,729,3.304,730,3.304,731,3.304,732,3.304,733,4.54,734,3.304,735,5.009,736,3.304,737,4.152,738,3.304,739,3.304,740,3.304,741,3.304,742,3.304,743,3.304,744,3.304,745,3.304,746,3.304,747,3.304,748,3.304,749,3.304,750,3.304,751,2.201,752,3.304]],["title/modules.html",[274,2.393]],["body/modules.html",[32,0.051,113,0.051,114,0.051,274,2.822]],["title/overview.html",[751,2.393]],["body/overview.html",[2,1.142,32,0.05,113,0.05,114,0.05,164,2.787,512,2.787,751,2.787,753,4.183,754,4.784]],["title/properties.html",[51,0.629,657,1.774]],["body/properties.html",[32,0.053,51,0.832,113,0.05,114,0.05,687,3.362,755,4.209]],["title/miscellaneous/variables.html",[756,1.774,757,2.539]],["body/miscellaneous/variables.html",[13,2.475,22,3.485,26,2.67,29,2.859,32,0.057,34,2.298,39,1.31,50,0.59,55,0.977,61,0.59,68,1.31,69,1.512,81,1.552,84,0.708,113,0.046,114,0.046,138,1.512,184,3.76,185,3.76,186,2.298,187,2.859,256,2.385,283,2.385,287,2.385,308,2.859,532,2.031,640,2.859,642,3.485,680,2.859,722,2.859,756,2.859,757,2.859,758,3.579,759,3.579,760,4.706,761,4.363,762,4.899,763,4.899,764,4.363,765,4.706,766,3.579,767,3.579,768,3.579,769,3.579,770,4.363,771,3.579,772,3.579]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":447,"title":{},"body":{"components/ListingsComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":755,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":477,"title":{},"body":{"components/NavComponent.html":{}}}],["0.5rem",{"_index":504,"title":{},"body":{"components/NavComponent.html":{}}}],["0.7rem",{"_index":470,"title":{},"body":{"components/NavComponent.html":{}}}],["0.7rem;}.navbar",{"_index":505,"title":{},"body":{"components/NavComponent.html":{}}}],["0/3",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["0000ff",{"_index":231,"title":{},"body":{"injectables/DataService.html":{}}}],["00ff00",{"_index":232,"title":{},"body":{"injectables/DataService.html":{}}}],["1",{"_index":427,"title":{},"body":{"components/ListingsComponent.html":{}}}],["1.1.26",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["1.4rem",{"_index":475,"title":{},"body":{"components/NavComponent.html":{}}}],["1/1",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":321,"title":{},"body":{"components/GridComponent.html":{}}}],["100",{"_index":328,"title":{},"body":{"components/GridComponent.html":{},"components/NavComponent.html":{},"coverage.html":{}}}],["1000",{"_index":305,"title":{},"body":{"components/GridComponent.html":{}}}],["12°c",{"_index":220,"title":{},"body":{"injectables/DataService.html":{}}}],["13/13",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["17°c",{"_index":223,"title":{},"body":{"injectables/DataService.html":{}}}],["19.0.0",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["19.0.3",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["19.0.4",{"_index":688,"title":{},"body":{"index.html":{}}}],["2",{"_index":754,"title":{},"body":{"overview.html":{}}}],["2.2.3",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["20/36",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":326,"title":{},"body":{"components/GridComponent.html":{}}}],["25°c",{"_index":226,"title":{},"body":{"injectables/DataService.html":{}}}],["2px",{"_index":497,"title":{},"body":{"components/NavComponent.html":{}}}],["2px;}@media",{"_index":509,"title":{},"body":{"components/NavComponent.html":{}}}],["3",{"_index":450,"title":{},"body":{"components/ListingsComponent.html":{}}}],["3.7.1",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["33.0.1",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["42",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":493,"title":{},"body":{"components/NavComponent.html":{}}}],["5.3.3",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":327,"title":{},"body":{"components/GridComponent.html":{}}}],["500",{"_index":486,"title":{},"body":{"components/NavComponent.html":{}}}],["5358fa926cd6340d99ca4b81f9a6ecc9",{"_index":250,"title":{},"body":{"injectables/DataService.html":{}}}],["55",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["576px",{"_index":503,"title":{},"body":{"components/NavComponent.html":{}}}],["5°c",{"_index":217,"title":{},"body":{"injectables/DataService.html":{}}}],["6",{"_index":526,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["66",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":753,"title":{},"body":{"overview.html":{}}}],["9/9",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["absolute",{"_index":492,"title":{},"body":{"components/NavComponent.html":{}}}],["accommodated",{"_index":573,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["accommodates",{"_index":292,"title":{},"body":{"components/GridComponent.html":{}}}],["actions",{"_index":460,"title":{},"body":{"components/NavComponent.html":{}}}],["acts",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["actual_component",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["additional",{"_index":745,"title":{},"body":{"index.html":{}}}],["ag",{"_index":257,"title":{},"body":{"components/GridComponent.html":{},"dependencies.html":{}}}],["again",{"_index":398,"title":{},"body":{"components/HomeComponent.html":{}}}],["aganimateshowchangecellrenderer",{"_index":302,"title":{},"body":{"components/GridComponent.html":{}}}],["aggridangular",{"_index":270,"title":{},"body":{"components/GridComponent.html":{}}}],["airbnb",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["airbnb.component",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["airbnb.component.css",{"_index":409,"title":{},"body":{"components/ListingsComponent.html":{}}}],["airbnb.component.html",{"_index":408,"title":{},"body":{"components/ListingsComponent.html":{}}}],["airbnbfe",{"_index":683,"title":{},"body":{"index.html":{}}}],["amenities",{"_index":575,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["amenity",{"_index":448,"title":{},"body":{"components/ListingsComponent.html":{}}}],["angular",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":147,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":238,"title":{},"body":{"injectables/DataService.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["angular/compiler",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["angular/google",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/GridComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"dependencies.html":{}}}],["animated",{"_index":261,"title":{},"body":{"components/GridComponent.html":{}}}],["api",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["api_key",{"_index":241,"title":{},"body":{"injectables/DataService.html":{}}}],["apis",{"_index":169,"title":{},"body":{"injectables/DataService.html":{}}}],["app",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["app.component.css",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":642,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":287,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":719,"title":{},"body":{"index.html":{}}}],["asyncpipe",{"_index":131,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{}}}],["auth",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["auth0",{"_index":119,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{}}}],["auth0's",{"_index":123,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["auth0/auth0",{"_index":146,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"dependencies.html":{}}}],["authbutton.component",{"_index":464,"title":{},"body":{"components/NavComponent.html":{}}}],["authbutton.component.html",{"_index":132,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["authbuttoncomponent",{"_index":99,"title":{"components/AuthButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"coverage.html":{}}}],["authentication",{"_index":116,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/NavComponent.html":{}}}],["authservice",{"_index":135,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{}}}],["authuser.component",{"_index":465,"title":{},"body":{"components/NavComponent.html":{}}}],["authuser.component.html",{"_index":152,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["authusercomponent",{"_index":102,"title":{"components/AuthUserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":700,"title":{},"body":{"index.html":{}}}],["available",{"_index":329,"title":{},"body":{"components/GridComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"index.html":{}}}],["backend",{"_index":357,"title":{},"body":{"components/HomeComponent.html":{}}}],["background",{"_index":498,"title":{},"body":{"components/NavComponent.html":{}}}],["based",{"_index":193,"title":{},"body":{"injectables/DataService.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["batching",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bath",{"_index":444,"title":{},"body":{"components/ListingsComponent.html":{}}}],["bathrooms",{"_index":296,"title":{},"body":{"components/GridComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["bed",{"_index":442,"title":{},"body":{"components/ListingsComponent.html":{}}}],["bedroom",{"_index":439,"title":{},"body":{"components/ListingsComponent.html":{}}}],["bedrooms",{"_index":295,"title":{},"body":{"components/GridComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["beds",{"_index":574,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["behavior",{"_index":309,"title":{},"body":{"components/GridComponent.html":{}}}],["blue",{"_index":215,"title":{},"body":{"injectables/DataService.html":{}}}],["boolean",{"_index":332,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{}}}],["bootstrap",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["bootstrapping",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["border",{"_index":499,"title":{},"body":{"components/NavComponent.html":{}}}],["bottom",{"_index":471,"title":{},"body":{"components/NavComponent.html":{}}}],["brand",{"_index":472,"title":{},"body":{"components/NavComponent.html":{}}}],["brand:hover",{"_index":479,"title":{},"body":{"components/NavComponent.html":{}}}],["browser",{"_index":667,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":716,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":717,"title":{},"body":{"index.html":{}}}],["button",{"_index":117,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/NavComponent.html":{}}}],["button'},{'name",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["calculates",{"_index":609,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["called",{"_index":366,"title":{},"body":{"components/HomeComponent.html":{}}}],["capabilities",{"_index":187,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["cell",{"_index":262,"title":{},"body":{"components/GridComponent.html":{}}}],["cellrenderer",{"_index":301,"title":{},"body":{"components/GridComponent.html":{}}}],["cellrendererparams",{"_index":303,"title":{},"body":{"components/GridComponent.html":{}}}],["celsius",{"_index":230,"title":{},"body":{"injectables/DataService.html":{}}}],["change",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changes",{"_index":263,"title":{},"body":{"components/GridComponent.html":{}}}],["child",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["choose",{"_index":741,"title":{},"body":{"index.html":{}}}],["class",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["cli",{"_index":686,"title":{},"body":{"index.html":{}}}],["client",{"_index":530,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["clientsiderowmodelmodule",{"_index":311,"title":{},"body":{"components/GridComponent.html":{}}}],["code",{"_index":237,"title":{},"body":{"injectables/DataService.html":{},"index.html":{}}}],["coldef",{"_index":290,"title":{},"body":{"components/GridComponent.html":{}}}],["color",{"_index":212,"title":{},"body":{"injectables/DataService.html":{},"components/NavComponent.html":{}}}],["column",{"_index":265,"title":{},"body":{"components/GridComponent.html":{}}}],["come",{"_index":739,"title":{},"body":{"index.html":{}}}],["command",{"_index":733,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":130,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{}}}],["communications",{"_index":521,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["community",{"_index":331,"title":{},"body":{"components/GridComponent.html":{}}}],["compile",{"_index":718,"title":{},"body":{"index.html":{}}}],["complete",{"_index":711,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"index.html":{},"overview.html":{}}}],["configuration",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configures",{"_index":308,"title":{},"body":{"components/GridComponent.html":{},"miscellaneous/variables.html":{}}}],["conjunction",{"_index":122,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["console.error('error",{"_index":384,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["constructor(auth",{"_index":153,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["constructor(dataservice",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ListingsComponent.html":{}}}],["constructor(document",{"_index":134,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["constructor(http",{"_index":181,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{}}}],["constructor(private",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["constructor(public",{"_index":158,"title":{},"body":{"components/AuthUserComponent.html":{},"components/ListingsComponent.html":{}}}],["constructor(webservice",{"_index":278,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{}}}],["container",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["containing",{"_index":374,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["content",{"_index":491,"title":{},"body":{"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["controls",{"_index":407,"title":{},"body":{"components/ListingsComponent.html":{}}}],["cool",{"_index":219,"title":{},"body":{"injectables/DataService.html":{}}}],["coordinates",{"_index":194,"title":{},"body":{"injectables/DataService.html":{}}}],["core",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["count",{"_index":375,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["coverage",{"_index":634,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":552,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["creates",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/GridComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["crud",{"_index":522,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["current",{"_index":159,"title":{},"body":{"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/ListingsComponent.html":{}}}],["currently",{"_index":170,"title":{},"body":{"injectables/DataService.html":{},"components/HomeComponent.html":{}}}],["data",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["data.service",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ListingsComponent.html":{}}}],["database",{"_index":527,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["dataservice",{"_index":35,"title":{"injectables/DataService.html":{}},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{},"components/ListingsComponent.html":{},"coverage.html":{}}}],["date",{"_index":551,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["decorators",{"_index":141,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["default",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"injectables/WebService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":428,"title":{},"body":{"components/ListingsComponent.html":{}}}],["defined",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"injectables/WebService.html":{},"miscellaneous/variables.html":{}}}],["definitions",{"_index":307,"title":{},"body":{"components/GridComponent.html":{}}}],["delete",{"_index":605,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["deletelisting",{"_index":617,"title":{},"body":{"injectables/WebService.html":{}}}],["deletelisting(id",{"_index":607,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["deletes",{"_index":604,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["deletion",{"_index":606,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["dependencies",{"_index":658,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["design",{"_index":269,"title":{},"body":{"components/GridComponent.html":{}}}],["detailed",{"_index":748,"title":{},"body":{"index.html":{}}}],["details",{"_index":160,"title":{},"body":{"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["detection",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":689,"title":{},"body":{"index.html":{}}}],["directive",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["directives",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"index.html":{}}}],["directory",{"_index":467,"title":{},"body":{"components/NavComponent.html":{},"index.html":{}}}],["display",{"_index":264,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["displaying",{"_index":401,"title":{},"body":{"components/ListingsComponent.html":{}}}],["displays",{"_index":254,"title":{},"body":{"components/GridComponent.html":{}}}],["dist",{"_index":720,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":386,"title":{},"body":{"components/HomeComponent.html":{}}}],["document",{"_index":126,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["documentation",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["duration",{"_index":579,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["dynamic",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":736,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":738,"title":{},"body":{"index.html":{}}}],["e3f2fd",{"_index":480,"title":{},"body":{"components/NavComponent.html":{}}}],["each",{"_index":310,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{}}}],["ease",{"_index":478,"title":{},"body":{"components/NavComponent.html":{}}}],["ease;}.nav",{"_index":508,"title":{},"body":{"components/NavComponent.html":{}}}],["ease;}.navbar",{"_index":506,"title":{},"body":{"components/NavComponent.html":{}}}],["element",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["enable",{"_index":320,"title":{},"body":{"components/GridComponent.html":{}}}],["enabled",{"_index":334,"title":{},"body":{"components/GridComponent.html":{}}}],["enables",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end",{"_index":735,"title":{},"body":{"index.html":{}}}],["error",{"_index":348,"title":{},"body":{"components/HomeComponent.html":{}}}],["essential",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["eventcoalescing",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events",{"_index":129,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["example",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"index.html":{}}}],["execute",{"_index":727,"title":{},"body":{"index.html":{}}}],["existing",{"_index":566,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["export",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["extended",{"_index":361,"title":{},"body":{"components/HomeComponent.html":{}}}],["external",{"_index":168,"title":{},"body":{"injectables/DataService.html":{}}}],["false",{"_index":370,"title":{},"body":{"components/HomeComponent.html":{}}}],["features",{"_index":258,"title":{},"body":{"components/GridComponent.html":{}}}],["fetch",{"_index":354,"title":{},"body":{"components/HomeComponent.html":{}}}],["fetched",{"_index":289,"title":{},"body":{"components/GridComponent.html":{}}}],["fetches",{"_index":192,"title":{},"body":{"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{}}}],["fetching",{"_index":166,"title":{},"body":{"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{}}}],["fetchpricerangesummary",{"_index":352,"title":{},"body":{"components/HomeComponent.html":{}}}],["ff0000",{"_index":235,"title":{},"body":{"injectables/DataService.html":{}}}],["ff7f00",{"_index":234,"title":{},"body":{"injectables/DataService.html":{}}}],["fff",{"_index":489,"title":{},"body":{"components/NavComponent.html":{}}}],["ffff00",{"_index":233,"title":{},"body":{"injectables/DataService.html":{}}}],["field",{"_index":291,"title":{},"body":{"components/GridComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"coverage.html":{}}}],["files",{"_index":704,"title":{},"body":{"index.html":{}}}],["filter",{"_index":293,"title":{},"body":{"components/GridComponent.html":{}}}],["filtering",{"_index":260,"title":{},"body":{"components/GridComponent.html":{}}}],["filters",{"_index":267,"title":{},"body":{"components/GridComponent.html":{}}}],["fits",{"_index":452,"title":{},"body":{"components/ListingsComponent.html":{}}}],["flashdelay",{"_index":304,"title":{},"body":{"components/GridComponent.html":{}}}],["floating",{"_index":266,"title":{},"body":{"components/GridComponent.html":{}}}],["floatingfilter",{"_index":294,"title":{},"body":{"components/GridComponent.html":{}}}],["following",{"_index":732,"title":{},"body":{"index.html":{}}}],["font",{"_index":473,"title":{},"body":{"components/NavComponent.html":{}}}],["formdata",{"_index":555,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["framework",{"_index":740,"title":{},"body":{"index.html":{}}}],["freezing",{"_index":216,"title":{},"body":{"injectables/DataService.html":{}}}],["function",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["functionality",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/GridComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["generate",{"_index":709,"title":{},"body":{"index.html":{}}}],["generated",{"_index":685,"title":{},"body":{"index.html":{}}}],["getalllistings",{"_index":564,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["getcurrentweather",{"_index":178,"title":{},"body":{"injectables/DataService.html":{}}}],["getcurrentweather(lat",{"_index":188,"title":{},"body":{"injectables/DataService.html":{}}}],["getlastpagenumber",{"_index":612,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["getlisting",{"_index":618,"title":{},"body":{"injectables/WebService.html":{}}}],["getlisting(id",{"_index":543,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["getlistings",{"_index":619,"title":{},"body":{"injectables/WebService.html":{}}}],["getlistings(page",{"_index":538,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["getloremipsum",{"_index":179,"title":{},"body":{"injectables/DataService.html":{}}}],["getloremipsum(paragraphs",{"_index":202,"title":{},"body":{"injectables/DataService.html":{}}}],["getpricerangesummary",{"_index":614,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["getreviews",{"_index":620,"title":{},"body":{"injectables/WebService.html":{}}}],["getreviews(id",{"_index":561,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["gettemperaturecolour",{"_index":180,"title":{},"body":{"injectables/DataService.html":{}}}],["gettemperaturecolour(temp",{"_index":209,"title":{},"body":{"injectables/DataService.html":{}}}],["getting",{"_index":172,"title":{"index.html":{}},"body":{"injectables/DataService.html":{}}}],["grabs",{"_index":204,"title":{},"body":{"injectables/DataService.html":{}}}],["green",{"_index":218,"title":{},"body":{"injectables/DataService.html":{}}}],["grid",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/NavComponent.html":{},"dependencies.html":{}}}],["grid'},{'name",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["grid.component",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["grid.component.css",{"_index":272,"title":{},"body":{"components/GridComponent.html":{}}}],["grid.component.html",{"_index":271,"title":{},"body":{"components/GridComponent.html":{}}}],["gridcomponent",{"_index":44,"title":{"components/GridComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"coverage.html":{}}}],["guests",{"_index":454,"title":{},"body":{"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["handles",{"_index":118,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{}}}],["handling",{"_index":520,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["header",{"_index":337,"title":{},"body":{"components/GridComponent.html":{}}}],["headername",{"_index":299,"title":{},"body":{"components/GridComponent.html":{}}}],["headers",{"_index":247,"title":{},"body":{"injectables/DataService.html":{}}}],["headings",{"_index":273,"title":{},"body":{"components/GridComponent.html":{}}}],["height",{"_index":496,"title":{},"body":{"components/NavComponent.html":{}}}],["helpbuilding",{"_index":715,"title":{},"body":{"index.html":{}}}],["hex",{"_index":236,"title":{},"body":{"injectables/DataService.html":{}}}],["hide",{"_index":392,"title":{},"body":{"components/HomeComponent.html":{}}}],["highlightchangesmodule",{"_index":316,"title":{},"body":{"components/GridComponent.html":{}}}],["home",{"_index":346,"title":{},"body":{"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["home'},{'name",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["home.component.html",{"_index":347,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":106,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"coverage.html":{}}}],["hook",{"_index":282,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{}}}],["hot",{"_index":228,"title":{},"body":{"injectables/DataService.html":{}}}],["html",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["http",{"_index":186,"title":{},"body":{"injectables/DataService.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"miscellaneous/variables.html":{}}}],["http://127.0.0.1:5000/api/v1.0/listings",{"_index":544,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["http://127.0.0.1:5000/api/v1.0/listings/pricerangesummary",{"_index":615,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["http://127.0.0.1:5000/api/v1.0/listings?pn",{"_index":539,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["http://127.0.0.1:5000/api/v1.0/listings?pn=1&ps=3000",{"_index":565,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["http://localhost:4200",{"_index":699,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":182,"title":{},"body":{"injectables/DataService.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["https://api.api",{"_index":245,"title":{},"body":{"injectables/DataService.html":{}}}],["https://api.openweathermap.org/data/2.5/weather?lat",{"_index":251,"title":{},"body":{"injectables/DataService.html":{}}}],["id",{"_index":518,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["identifier",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["import",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["important",{"_index":481,"title":{},"body":{"components/NavComponent.html":{}}}],["important;}.nav",{"_index":507,"title":{},"body":{"components/NavComponent.html":{}}}],["imports",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["includes",{"_index":706,"title":{},"body":{"index.html":{}}}],["including",{"_index":747,"title":{},"body":{"index.html":{}}}],["index",{"_index":50,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":377,"title":{},"body":{"components/HomeComponent.html":{}}}],["individual",{"_index":364,"title":{},"body":{"components/HomeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["information",{"_index":155,"title":{},"body":{"components/AuthUserComponent.html":{},"index.html":{}}}],["initial",{"_index":420,"title":{},"body":{"components/ListingsComponent.html":{}}}],["initialization",{"_index":284,"title":{},"body":{"components/GridComponent.html":{},"components/ListingsComponent.html":{}}}],["initialized",{"_index":367,"title":{},"body":{"components/HomeComponent.html":{}}}],["initializes",{"_index":529,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["initiates",{"_index":368,"title":{},"body":{"components/HomeComponent.html":{}}}],["inject",{"_index":145,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["inject(document",{"_index":142,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["injectable",{"_index":163,"title":{"injectables/DataService.html":{},"injectables/WebService.html":{}},"body":{"injectables/DataService.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"coverage.html":{}}}],["injectables",{"_index":164,"title":{},"body":{"injectables/DataService.html":{},"injectables/WebService.html":{},"overview.html":{}}}],["injected",{"_index":137,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["input",{"_index":336,"title":{},"body":{"components/GridComponent.html":{}}}],["instance",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/GridComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["integrates",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/NavComponent.html":{}}}],["interface",{"_index":510,"title":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{}},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"coverage.html":{}}}],["interfaces",{"_index":512,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"overview.html":{}}}],["ipsum",{"_index":174,"title":{},"body":{"injectables/DataService.html":{}}}],["items",{"_index":524,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["jquery",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":728,"title":{},"body":{"index.html":{}}}],["key",{"_index":249,"title":{},"body":{"injectables/DataService.html":{}}}],["last",{"_index":611,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["lat",{"_index":195,"title":{},"body":{"injectables/DataService.html":{}}}],["later",{"_index":399,"title":{},"body":{"components/HomeComponent.html":{}}}],["latitude",{"_index":196,"title":{},"body":{"injectables/DataService.html":{}}}],["left",{"_index":494,"title":{},"body":{"components/NavComponent.html":{}}}],["legend",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["level",{"_index":127,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["lifecycle",{"_index":281,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{}}}],["link",{"_index":466,"title":{},"body":{"components/NavComponent.html":{}}}],["link.active",{"_index":488,"title":{},"body":{"components/NavComponent.html":{}}}],["link.active::after",{"_index":490,"title":{},"body":{"components/NavComponent.html":{}}}],["link:hover",{"_index":487,"title":{},"body":{"components/NavComponent.html":{}}}],["list",{"_index":426,"title":{},"body":{"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"index.html":{}}}],["listing",{"_index":255,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing's",{"_index":560,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["listing.accommodates",{"_index":453,"title":{},"body":{"components/ListingsComponent.html":{}}}],["listing.accomodates",{"_index":572,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing.amenities",{"_index":445,"title":{},"body":{"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing.amenities.length",{"_index":446,"title":{},"body":{"components/ListingsComponent.html":{}}}],["listing.amenities.slice(0",{"_index":449,"title":{},"body":{"components/ListingsComponent.html":{}}}],["listing.bathrooms",{"_index":443,"title":{},"body":{"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing.bedrooms",{"_index":438,"title":{},"body":{"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing.beds",{"_index":441,"title":{},"body":{"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing.description",{"_index":569,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing.maximum_nights",{"_index":580,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing.minimum_nights",{"_index":576,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing.name",{"_index":393,"title":{},"body":{"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing.neighbourhood",{"_index":585,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing.price",{"_index":394,"title":{},"body":{"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing.property_type",{"_index":437,"title":{},"body":{"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing.review_scores_location",{"_index":584,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing.review_scores_rating",{"_index":436,"title":{},"body":{"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listing.room_type",{"_index":570,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listingcomponent",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"coverage.html":{}}}],["listings",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["listings'},{'name",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["listings_list",{"_index":410,"title":{},"body":{"components/ListingsComponent.html":{}}}],["listingscomponent",{"_index":42,"title":{"components/ListingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"coverage.html":{}}}],["literal",{"_index":616,"title":{},"body":{"interfaces/PriceRangeSummary.html":{}}}],["loading",{"_index":349,"title":{},"body":{"components/HomeComponent.html":{}}}],["local",{"_index":692,"title":{},"body":{"index.html":{}}}],["location",{"_index":197,"title":{},"body":{"injectables/DataService.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["log",{"_index":148,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["login/logout",{"_index":120,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/NavComponent.html":{}}}],["lon",{"_index":190,"title":{},"body":{"injectables/DataService.html":{}}}],["longitude",{"_index":198,"title":{},"body":{"injectables/DataService.html":{}}}],["lorem",{"_index":173,"title":{},"body":{"injectables/DataService.html":{}}}],["main",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["making",{"_index":531,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["manage",{"_index":124,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{}}}],["manages",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{}}}],["managing",{"_index":402,"title":{},"body":{"components/ListingsComponent.html":{}}}],["manipulation",{"_index":139,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["many",{"_index":207,"title":{},"body":{"injectables/DataService.html":{}}}],["maps",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.totallistings",{"_index":613,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["max",{"_index":502,"title":{},"body":{"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["maximum",{"_index":581,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["media",{"_index":501,"title":{},"body":{"components/NavComponent.html":{}}}],["memberof",{"_index":339,"title":{},"body":{"components/GridComponent.html":{}}}],["metadata",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["method",{"_index":338,"title":{},"body":{"components/GridComponent.html":{},"components/ListingsComponent.html":{}}}],["methods",{"_index":177,"title":{},"body":{"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["mild",{"_index":222,"title":{},"body":{"injectables/DataService.html":{}}}],["min",{"_index":516,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["minimum",{"_index":577,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["miscellaneous",{"_index":756,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":703,"title":{},"body":{"index.html":{}}}],["modules",{"_index":274,"title":{"modules.html":{}},"body":{"components/GridComponent.html":{},"modules.html":{}}}],["more",{"_index":451,"title":{},"body":{"components/ListingsComponent.html":{},"index.html":{}}}],["multiple",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["namefor",{"_index":710,"title":{},"body":{"index.html":{}}}],["nav",{"_index":482,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["nav.component.html",{"_index":463,"title":{},"body":{"components/NavComponent.html":{}}}],["navbar",{"_index":459,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomponent",{"_index":43,"title":{"components/NavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":698,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":415,"title":{},"body":{"components/ListingsComponent.html":{}}}],["navigation",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["needs",{"_index":744,"title":{},"body":{"index.html":{}}}],["neighborhood",{"_index":586,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["new",{"_index":417,"title":{},"body":{"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":381,"title":{},"body":{"components/HomeComponent.html":{},"components/ListingsComponent.html":{}}}],["nextpage",{"_index":411,"title":{},"body":{"components/ListingsComponent.html":{}}}],["ng",{"_index":694,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":277,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{}}}],["night",{"_index":395,"title":{},"body":{"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["ninjas",{"_index":205,"title":{},"body":{"injectables/DataService.html":{}}}],["ninjas.com/v1/loremipsum?paragraphs",{"_index":246,"title":{},"body":{"injectables/DataService.html":{}}}],["null",{"_index":517,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["number",{"_index":189,"title":{},"body":{"injectables/DataService.html":{},"components/GridComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["number(sessionstorage['page",{"_index":431,"title":{},"body":{"components/ListingsComponent.html":{}}}],["numberfiltermodule",{"_index":314,"title":{},"body":{"components/GridComponent.html":{}}}],["object",{"_index":138,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/HomeComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":373,"title":{},"body":{"components/HomeComponent.html":{}}}],["observable",{"_index":200,"title":{},"body":{"injectables/DataService.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["one",{"_index":742,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":345,"title":{},"body":{"components/HomeComponent.html":{}}}],["open",{"_index":697,"title":{},"body":{"index.html":{}}}],["openweathermap",{"_index":201,"title":{},"body":{"injectables/DataService.html":{}}}],["operations",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["optimizes",{"_index":722,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"injectables/WebService.html":{}}}],["options",{"_index":330,"title":{},"body":{"components/GridComponent.html":{}}}],["orange",{"_index":224,"title":{},"body":{"injectables/DataService.html":{}}}],["out",{"_index":149,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["overall",{"_index":582,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["overview",{"_index":751,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":657,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":468,"title":{},"body":{"components/NavComponent.html":{}}}],["page",{"_index":325,"title":{},"body":{"components/GridComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"index.html":{}}}],["pages",{"_index":610,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["pagesize",{"_index":525,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["paginated",{"_index":403,"title":{},"body":{"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["pagination",{"_index":259,"title":{},"body":{"components/GridComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["paginationmodule",{"_index":315,"title":{},"body":{"components/GridComponent.html":{}}}],["paginationpagesize",{"_index":275,"title":{},"body":{"components/GridComponent.html":{}}}],["paginationpagesizeselector",{"_index":276,"title":{},"body":{"components/GridComponent.html":{}}}],["paragraphs",{"_index":206,"title":{},"body":{"injectables/DataService.html":{}}}],["param",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["parameters",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"injectables/WebService.html":{}}}],["per",{"_index":324,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["percentage",{"_index":376,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["performance",{"_index":723,"title":{},"body":{"index.html":{}}}],["persistence",{"_index":406,"title":{},"body":{"components/ListingsComponent.html":{}}}],["picks",{"_index":211,"title":{},"body":{"injectables/DataService.html":{}}}],["pipes",{"_index":714,"title":{},"body":{"index.html":{}}}],["please",{"_index":396,"title":{},"body":{"components/HomeComponent.html":{}}}],["populates",{"_index":359,"title":{},"body":{"components/HomeComponent.html":{}}}],["position",{"_index":483,"title":{},"body":{"components/NavComponent.html":{}}}],["postdata",{"_index":554,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('accomodates",{"_index":592,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('amenities",{"_index":596,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('bathrooms",{"_index":593,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('bedrooms",{"_index":594,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('beds",{"_index":595,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('comments",{"_index":557,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('date",{"_index":558,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('description",{"_index":589,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('maximum_nights",{"_index":599,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('minimum_nights",{"_index":598,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('name",{"_index":588,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('neighbourhood",{"_index":602,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('price",{"_index":597,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('property_type",{"_index":590,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('review_scores_location",{"_index":601,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('review_scores_rating",{"_index":600,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('room_type",{"_index":591,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postdata.append('user_name",{"_index":556,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["postreview",{"_index":621,"title":{},"body":{"injectables/WebService.html":{}}}],["postreview(id",{"_index":553,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["posts",{"_index":545,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["powerful",{"_index":707,"title":{},"body":{"index.html":{}}}],["previous",{"_index":423,"title":{},"body":{"components/ListingsComponent.html":{}}}],["previouspage",{"_index":412,"title":{},"body":{"components/ListingsComponent.html":{}}}],["price",{"_index":297,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["pricerangeresponse",{"_index":511,"title":{"interfaces/PriceRangeResponse.html":{}},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"coverage.html":{}}}],["priceranges",{"_index":350,"title":{},"body":{"components/HomeComponent.html":{}}}],["pricerangesummary",{"_index":515,"title":{"interfaces/PriceRangeSummary.html":{}},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"coverage.html":{}}}],["private",{"_index":351,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["process",{"_index":369,"title":{},"body":{"components/HomeComponent.html":{}}}],["production",{"_index":721,"title":{},"body":{"index.html":{}}}],["profile",{"_index":151,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["profile'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["project",{"_index":684,"title":{},"body":{"index.html":{}}}],["properties",{"_index":51,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"properties.html":{}}}],["property",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":240,"title":{},"body":{"injectables/DataService.html":{}}}],["providehttpclient",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/GridComponent.html":{},"components/ListingsComponent.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/GridComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["providezonechangedetection",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ps",{"_index":540,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["public",{"_index":133,"title":{},"body":{"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/ListingsComponent.html":{}}}],["radius",{"_index":500,"title":{},"body":{"components/NavComponent.html":{}}}],["range",{"_index":355,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["range.count",{"_index":388,"title":{},"body":{"components/HomeComponent.html":{}}}],["range.percentage",{"_index":389,"title":{},"body":{"components/HomeComponent.html":{}}}],["range.range",{"_index":387,"title":{},"body":{"components/HomeComponent.html":{}}}],["range.showlistings",{"_index":391,"title":{},"body":{"components/HomeComponent.html":{}}}],["rating",{"_index":300,"title":{},"body":{"components/GridComponent.html":{}}}],["red",{"_index":227,"title":{},"body":{"injectables/DataService.html":{}}}],["redirects",{"_index":128,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["reference",{"_index":752,"title":{},"body":{"index.html":{}}}],["references",{"_index":749,"title":{},"body":{"index.html":{}}}],["related",{"_index":458,"title":{},"body":{"components/NavComponent.html":{}}}],["relative",{"_index":484,"title":{},"body":{"components/NavComponent.html":{}}}],["reload",{"_index":701,"title":{},"body":{"index.html":{}}}],["represent",{"_index":213,"title":{},"body":{"injectables/DataService.html":{}}}],["requests",{"_index":532,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":318,"title":{},"body":{"components/GridComponent.html":{}}}],["resources",{"_index":746,"title":{},"body":{"index.html":{}}}],["response",{"_index":343,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["response.data.map(range",{"_index":383,"title":{},"body":{"components/HomeComponent.html":{}}}],["response.length",{"_index":535,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["responsible",{"_index":519,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["responsive",{"_index":268,"title":{},"body":{"components/GridComponent.html":{}}}],["restores",{"_index":419,"title":{},"body":{"components/ListingsComponent.html":{}}}],["results",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":537,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["retrieves",{"_index":536,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["return",{"_index":243,"title":{},"body":{"injectables/DataService.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["returns",{"_index":199,"title":{},"body":{"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["review",{"_index":546,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["review.comments",{"_index":549,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["review.date",{"_index":550,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["review.user_name",{"_index":547,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["review_scores_rating",{"_index":298,"title":{},"body":{"components/GridComponent.html":{}}}],["reviewer",{"_index":548,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["reviews",{"_index":523,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["room",{"_index":571,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{}}}],["root'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["router",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/NavComponent.html":{}}}],["routermodule",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["routeroutlet",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["routes",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routing",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["rows",{"_index":323,"title":{},"body":{"components/GridComponent.html":{}}}],["run",{"_index":693,"title":{},"body":{"index.html":{}}}],["runner",{"_index":730,"title":{},"body":{"index.html":{}}}],["running",{"_index":696,"title":{},"body":{"index.html":{}}}],["runs",{"_index":283,"title":{},"body":{"components/GridComponent.html":{},"components/ListingsComponent.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":239,"title":{},"body":{"injectables/DataService.html":{},"dependencies.html":{}}}],["s",{"_index":440,"title":{},"body":{"components/ListingsComponent.html":{}}}],["scaffolding",{"_index":705,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":712,"title":{},"body":{"index.html":{}}}],["score",{"_index":583,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["se8imqvk7yvpwvr2v7pagq==xuyjltxln7yxu6et",{"_index":242,"title":{},"body":{"injectables/DataService.html":{}}}],["see",{"_index":462,"title":{},"body":{"components/NavComponent.html":{}}}],["selector",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["serveonce",{"_index":695,"title":{},"body":{"index.html":{}}}],["server",{"_index":690,"title":{},"body":{"index.html":{}}}],["serves",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["service",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["services",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["session",{"_index":404,"title":{},"body":{"components/ListingsComponent.html":{}}}],["sessions",{"_index":125,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["sessionstorage['page",{"_index":429,"title":{},"body":{"components/ListingsComponent.html":{}}}],["set",{"_index":421,"title":{},"body":{"components/ListingsComponent.html":{}}}],["sets",{"_index":184,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["shell",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["show",{"_index":335,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{}}}],["showing",{"_index":455,"title":{},"body":{"components/ListingsComponent.html":{}}}],["showlistings",{"_index":362,"title":{},"body":{"components/HomeComponent.html":{}}}],["size",{"_index":474,"title":{},"body":{"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"index.html":{}}}],["specific",{"_index":542,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["speed",{"_index":724,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/airbnb.component.ts",{"_index":400,"title":{},"body":{"components/ListingsComponent.html":{},"coverage.html":{}}}],["src/app/airbnb.component.ts:29",{"_index":425,"title":{},"body":{"components/ListingsComponent.html":{}}}],["src/app/airbnb.component.ts:32",{"_index":413,"title":{},"body":{"components/ListingsComponent.html":{}}}],["src/app/airbnb.component.ts:41",{"_index":424,"title":{},"body":{"components/ListingsComponent.html":{}}}],["src/app/airbnb.component.ts:50",{"_index":418,"title":{},"body":{"components/ListingsComponent.html":{}}}],["src/app/airbnb.component.ts:67",{"_index":422,"title":{},"body":{"components/ListingsComponent.html":{}}}],["src/app/airbnb.component.ts:83",{"_index":414,"title":{},"body":{"components/ListingsComponent.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:47",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":640,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/authbutton.component.ts",{"_index":115,"title":{},"body":{"components/AuthButtonComponent.html":{},"coverage.html":{}}}],["src/app/authbutton.component.ts:33",{"_index":136,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["src/app/authbutton.component.ts:43",{"_index":143,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["src/app/authbutton.component.ts:44",{"_index":140,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["src/app/authbutton.component.ts:45",{"_index":144,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["src/app/authuser.component.ts",{"_index":150,"title":{},"body":{"components/AuthUserComponent.html":{},"coverage.html":{}}}],["src/app/authuser.component.ts:19",{"_index":154,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["src/app/authuser.component.ts:25",{"_index":157,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["src/app/data.service.ts",{"_index":165,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/data.service.ts:12",{"_index":183,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:23",{"_index":203,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:37",{"_index":191,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/data.service.ts:55",{"_index":210,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/grid.component.ts",{"_index":253,"title":{},"body":{"components/GridComponent.html":{},"coverage.html":{}}}],["src/app/grid.component.ts:104",{"_index":280,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid.component.ts:49",{"_index":306,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid.component.ts:66",{"_index":286,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid.component.ts:72",{"_index":317,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid.component.ts:82",{"_index":319,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid.component.ts:85",{"_index":322,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/grid.component.ts:88",{"_index":279,"title":{},"body":{"components/GridComponent.html":{}}}],["src/app/home.component.ts",{"_index":344,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home.component.ts:23",{"_index":372,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home.component.ts:28",{"_index":371,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home.component.ts:33",{"_index":353,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home.component.ts:47",{"_index":365,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home.component.ts:60",{"_index":358,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/listing.component.ts",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["src/app/nav.component.ts",{"_index":457,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["src/app/web.service.ts",{"_index":513,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"coverage.html":{}}}],["src/app/web.service.ts:125",{"_index":632,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:151",{"_index":624,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:159",{"_index":626,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:167",{"_index":629,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:32",{"_index":633,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:35",{"_index":623,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:53",{"_index":628,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:64",{"_index":627,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:78",{"_index":631,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:91",{"_index":630,"title":{},"body":{"injectables/WebService.html":{}}}],["src/app/web.service.ts:99",{"_index":625,"title":{},"body":{"injectables/WebService.html":{}}}],["standalone",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["start",{"_index":691,"title":{},"body":{"index.html":{}}}],["started",{"_index":682,"title":{"index.html":{}},"body":{}}],["statements",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":360,"title":{},"body":{"components/HomeComponent.html":{}}}],["status",{"_index":461,"title":{},"body":{"components/NavComponent.html":{}}}],["stay",{"_index":578,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["storage",{"_index":405,"title":{},"body":{"components/ListingsComponent.html":{}}}],["store",{"_index":288,"title":{},"body":{"components/GridComponent.html":{},"index.html":{}}}],["string",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["styleurl",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/ListingsComponent.html":{}}}],["subscribe((response",{"_index":341,"title":{},"body":{"components/GridComponent.html":{},"components/ListingsComponent.html":{}}}],["such",{"_index":713,"title":{},"body":{"index.html":{}}}],["suits",{"_index":743,"title":{},"body":{"index.html":{}}}],["summary",{"_index":356,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["support",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["supports",{"_index":171,"title":{},"body":{"injectables/DataService.html":{}}}],["table",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":229,"title":{},"body":{"injectables/DataService.html":{}}}],["temperature",{"_index":214,"title":{},"body":{"injectables/DataService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["templateurl",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["test",{"_index":729,"title":{},"body":{"index.html":{}}}],["testing",{"_index":737,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":734,"title":{},"body":{"index.html":{}}}],["tests",{"_index":726,"title":{},"body":{"index.html":{}}}],["text",{"_index":175,"title":{},"body":{"injectables/DataService.html":{}}}],["textfiltermodule",{"_index":313,"title":{},"body":{"components/GridComponent.html":{}}}],["this.data",{"_index":342,"title":{},"body":{"components/GridComponent.html":{}}}],["this.error",{"_index":385,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fetchpricerangesummary",{"_index":378,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.getalllistings().subscribe(response",{"_index":533,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["this.http.delete('http://127.0.0.1:5000/api/v1.0/listings",{"_index":608,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["this.http.get",{"_index":244,"title":{},"body":{"injectables/DataService.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["this.http.get('http://127.0.0.1:5000/api/v1.0/listings",{"_index":562,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["this.http.post('http://127.0.0.1:5000/api/v1.0/listings",{"_index":559,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["this.http.put('http://127.0.0.1:5000/api/v1.0/listings",{"_index":603,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["this.listings_list",{"_index":433,"title":{},"body":{"components/ListingsComponent.html":{}}}],["this.loading",{"_index":379,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.page",{"_index":430,"title":{},"body":{"components/ListingsComponent.html":{}}}],["this.pagesize",{"_index":541,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["this.priceranges",{"_index":382,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.totallistings",{"_index":534,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["this.webservice.getalllistings",{"_index":340,"title":{},"body":{"components/GridComponent.html":{}}}],["this.webservice.getlastpagenumber",{"_index":456,"title":{},"body":{"components/ListingsComponent.html":{}}}],["this.webservice.getlistings(this.page",{"_index":432,"title":{},"body":{"components/ListingsComponent.html":{}}}],["this.webservice.getlistings(this.page).subscribe((response",{"_index":434,"title":{},"body":{"components/ListingsComponent.html":{}}}],["this.webservice.getpricerangesummary().subscribe",{"_index":380,"title":{},"body":{"components/HomeComponent.html":{}}}],["title",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":363,"title":{},"body":{"components/HomeComponent.html":{}}}],["tools",{"_index":708,"title":{},"body":{"index.html":{}}}],["top",{"_index":469,"title":{},"body":{"components/NavComponent.html":{}}}],["total",{"_index":390,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["total_listings",{"_index":514,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["totallistings",{"_index":528,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["track",{"_index":435,"title":{},"body":{"components/ListingsComponent.html":{}}}],["transition",{"_index":476,"title":{},"body":{"components/NavComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["true",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":397,"title":{},"body":{"components/HomeComponent.html":{}}}],["tslib",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"injectables/DataService.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":725,"title":{},"body":{"index.html":{}}}],["units=metric&appid",{"_index":252,"title":{},"body":{"injectables/DataService.html":{}}}],["up",{"_index":185,"title":{},"body":{"injectables/DataService.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":567,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["updated",{"_index":568,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["updatelisting",{"_index":622,"title":{},"body":{"injectables/WebService.html":{}}}],["updatelisting(id",{"_index":587,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["updates",{"_index":416,"title":{},"body":{"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["use",{"_index":731,"title":{},"body":{"index.html":{}}}],["used",{"_index":156,"title":{},"body":{"components/AuthUserComponent.html":{},"components/HomeComponent.html":{}}}],["user",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["user.email",{"_index":162,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["user.name",{"_index":161,"title":{},"body":{"components/AuthUserComponent.html":{}}}],["using",{"_index":256,"title":{},"body":{"components/GridComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["utility",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ListingsComponent.html":{}}}],["validationmodule",{"_index":312,"title":{},"body":{"components/GridComponent.html":{}}}],["value",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"injectables/WebService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/AuthButtonComponent.html":{},"components/AuthUserComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"components/NavComponent.html":{}}}],["variable",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":757,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":167,"title":{},"body":{"injectables/DataService.html":{}}}],["version",{"_index":687,"title":{},"body":{"index.html":{},"properties.html":{}}}],["view",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["visit",{"_index":750,"title":{},"body":{"index.html":{}}}],["void",{"_index":285,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{}}}],["want",{"_index":208,"title":{},"body":{"injectables/DataService.html":{}}}],["warm",{"_index":225,"title":{},"body":{"injectables/DataService.html":{}}}],["weather",{"_index":176,"title":{},"body":{"injectables/DataService.html":{}}}],["web",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{}}}],["web.service",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{}}}],["webservice",{"_index":36,"title":{"injectables/WebService.html":{}},"body":{"components/AppComponent.html":{},"components/GridComponent.html":{},"components/HomeComponent.html":{},"components/ListingsComponent.html":{},"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{},"coverage.html":{}}}],["weight",{"_index":485,"title":{},"body":{"components/NavComponent.html":{}}}],["whenever",{"_index":702,"title":{},"body":{"index.html":{}}}],["whether",{"_index":333,"title":{},"body":{"components/GridComponent.html":{},"components/HomeComponent.html":{}}}],["width",{"_index":495,"title":{},"body":{"components/NavComponent.html":{}}}],["without",{"_index":563,"title":{},"body":{"interfaces/PriceRangeResponse.html":{},"interfaces/PriceRangeSummary.html":{},"injectables/WebService.html":{}}}],["works",{"_index":121,"title":{},"body":{"components/AuthButtonComponent.html":{}}}],["x",{"_index":248,"title":{},"body":{"injectables/DataService.html":{}}}],["yellow",{"_index":221,"title":{},"body":{"injectables/DataService.html":{}}}],["zone.js",{"_index":680,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Root component of the Airbnb application.\nActs as the main container and bootstrapping component.\nA standalone component that:\n\nServes as the application shell\nProvides core services to child components\nManages routing and navigation\nIntegrates essential components like Navigation and Listings\n\nExample :\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                DataService\n                                WebService\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                ListingsComponent\n                                NavComponent\n                                GridComponent\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:47\n                            \n                        \n\n                \n                    \n                            Creates an instance of AppComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for utility data operations\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Airbnb'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:47\n                        \n                    \n\n            \n                \n                    Title of the application\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule, RouterOutlet } from '@angular/router';\nimport { ListingsComponent } from './airbnb.component';\nimport { NavComponent } from './nav.component';\nimport { DataService } from './data.service';\nimport { GridComponent } from './grid.component';\nimport { WebService } from './web.service';\n\n\n/**\n * Root component of the Airbnb application.\n * Acts as the main container and bootstrapping component.\n * \n * @class AppComponent\n * @implements {Component}\n * \n * @description\n * A standalone component that:\n * - Serves as the application shell\n * - Provides core services to child components\n * - Manages routing and navigation\n * - Integrates essential components like Navigation and Listings\n * \n * @example\n * \n * \n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n      RouterOutlet,        // For routing support\n      ListingsComponent,   // Property listings component\n      NavComponent,        // Navigation component\n      GridComponent,       // Grid view component\n      RouterModule        // Angular router functionality\n  ],\n  providers: [\n      DataService,        // Utility data service\n      WebService         // Main web API service\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  /** Title of the application */\n  title = 'Airbnb';\n\n  /**\n   * Creates an instance of AppComponent.\n   * \n   * @constructor\n   * @param {DataService} dataService - Service for utility data operations\n   */\n  constructor(private dataService: DataService) {}\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthButtonComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'GridComponent', 'selector': 'grid'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListingComponent', 'selector': 'listing'},{'name': 'ListingsComponent', 'selector': 'listings'},{'name': 'NavComponent', 'selector': 'navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthButtonComponent.html":{"url":"components/AuthButtonComponent.html","title":"component - AuthButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authbutton.component.ts\n\n\n\n    \n        Description\n    \n    \n        Authentication button component that handles Auth0 login/logout functionality.\nWorks in conjunction with Auth0's authentication service to manage user sessions.\nA standalone component that:\n\nProvides login/logout button functionality\nIntegrates with Auth0's authentication service\nHandles document-level operations for auth redirects\nManages routing after authentication events\n\nExample :\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            Router\n                \n            \n\n\n            \n                selector\n                auth-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            AsyncPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                authbutton.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    \n                                    Public\n                                document\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/authbutton.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected Document object for DOM manipulation\n\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAuth0's authentication service\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular router for navigation after auth events\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authbutton.component.ts:44\n                        \n                    \n\n            \n                \n                    - Auth0's authentication service\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(DOCUMENT)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/authbutton.component.ts:43\n                        \n                    \n\n            \n                \n                    - Injected Document object for DOM manipulation\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authbutton.component.ts:45\n                        \n                    \n\n            \n                \n                    - Angular router for navigation after auth events\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { DOCUMENT } from '@angular/common';\nimport { AsyncPipe } from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n/**\n * Authentication button component that handles Auth0 login/logout functionality.\n * Works in conjunction with Auth0's authentication service to manage user sessions.\n * \n * @class AuthButtonComponent\n * @implements {Component}\n * \n * @description\n * A standalone component that:\n * - Provides login/logout button functionality\n * - Integrates with Auth0's authentication service\n * - Handles document-level operations for auth redirects\n * - Manages routing after authentication events\n * \n * @example\n * \n * \n */\n@Component({\n    selector: 'auth-button',\n    templateUrl: 'authbutton.component.html',\n    standalone: true,\n    imports: [CommonModule, AsyncPipe],\n    providers: [Router]\n})\nexport class AuthButtonComponent {\n    /**\n     * Creates an instance of AuthButtonComponent.\n     * \n     * @constructor\n     * @param {Document} document - Injected Document object for DOM manipulation\n     * @param {AuthService} auth - Auth0's authentication service\n     * @param {Router} router - Angular router for navigation after auth events\n     */\n    constructor(\n        @Inject(DOCUMENT) public document: Document, \n        public auth: AuthService, \n        public router: Router\n    ) {}\n}\n\n\n    \n\n    \n        \n    \n        Log out\n    \n\n\n    Log in\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Log out        Log in'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthButtonComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'GridComponent', 'selector': 'grid'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListingComponent', 'selector': 'listing'},{'name': 'ListingsComponent', 'selector': 'listings'},{'name': 'NavComponent', 'selector': 'navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthUserComponent.html":{"url":"components/AuthUserComponent.html","title":"component - AuthUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/authuser.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                authuser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/authuser.component.ts:19\n                            \n                        \n\n                \n                    \n                            Example :                         and user profile information.\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Auth0 authentication service used to manage authentication \n and user profile information.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/authuser.component.ts:25\n                        \n                    \n\n            \n                \n                    - The Auth0 authentication service used to manage authentication \n   and user profile information.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { AsyncPipe } from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n    selector: 'user-profile',\n    templateUrl: 'authuser.component.html',\n    standalone: true,\n    imports: [AsyncPipe, CommonModule]\n})\nexport class AuthUserComponent {\n    /**\n     * @constructor\n     * @param {AuthService} auth - The Auth0 authentication service used to manage authentication \n     *                              and user profile information.\n     */\n    constructor(public auth: AuthService) {}\n}\n\n    \n\n    \n        \n    Current User Details\n\n\n    {{ user.name }}\n    {{ user.email }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Current User Details    {{ user.name }}    {{ user.email }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthButtonComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'GridComponent', 'selector': 'grid'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListingComponent', 'selector': 'listing'},{'name': 'ListingsComponent', 'selector': 'listings'},{'name': 'NavComponent', 'selector': 'navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service for fetching various data from external APIs.\nCurrently supports getting Lorem Ipsum text and weather data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentWeather\n                            \n                            \n                                getLoremIpsum\n                            \n                            \n                                getTemperatureColour\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/data.service.ts:12\n                            \n                        \n\n                \n                    \n                            Sets up our service with HTTP capabilities\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentWeather\n                        \n                    \n                \n            \n            \n                \ngetCurrentWeather(lat: number, lon: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Fetches current weather data based on coordinates\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lat\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLatitude of the location\n\n\n                                            \n                                        \n                                        \n                                                lon\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLongitude of the location\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable with weather details from OpenWeatherMap\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoremIpsum\n                        \n                    \n                \n            \n            \n                \ngetLoremIpsum(paragraphs: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Grabs some Lorem Ipsum text from API Ninjas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                paragraphs\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nHow many paragraphs you want\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable with the Lorem Ipsum text\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTemperatureColour\n                        \n                    \n                \n            \n            \n                \ngetTemperatureColour(temp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Picks a color to represent a temperature\n\nBlue for freezing (≤5°C)\nGreen for cool (≤12°C)\nYellow for mild (≤17°C)\nOrange for warm (≤25°C)\nRed for hot (>25°C)\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                temp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nTemperature in Celsius\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     \"#0000ff\" | \"#00ff00\" | \"#ffff00\" | \"#ff7f00\" | \"#ff0000\"\n\n                        \n                            \n                                A hex color code:\n\nBlue for freezing (≤5°C)\nGreen for cool (≤12°C)\nYellow for mild (≤17°C)\nOrange for warm (≤25°C)\nRed for hot (>25°C)\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * A service for fetching various data from external APIs.\n * Currently supports getting Lorem Ipsum text and weather data.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n    /**\n     * Sets up our service with HTTP capabilities\n     */\n    constructor(private http: HttpClient) { }\n\n    /**\n     * Grabs some Lorem Ipsum text from API Ninjas\n     * @param paragraphs - How many paragraphs you want\n     * @returns Observable with the Lorem Ipsum text\n     */\n    getLoremIpsum(paragraphs: number): Observable {\n        let API_key = 'se8iMQVK7YvPwVR2v7pAgQ==XuyjlTXln7YxU6eT';\n        return this.http.get(\n            'https://api.api-ninjas.com/v1/loremipsum?paragraphs=' + paragraphs,\n            { headers: { 'X-Api-Key': API_key } }\n        );\n    }\n\n    /**\n     * Fetches current weather data based on coordinates\n     * @param lat - Latitude of the location\n     * @param lon - Longitude of the location\n     * @returns Observable with weather details from OpenWeatherMap\n     */\n    getCurrentWeather(lat: number, lon: number) {\n        let API_key = \"5358fa926cd6340d99ca4b81f9a6ecc9\";\n        return this.http.get(\n            'https://api.openweathermap.org/data/2.5/weather?lat=' + lat +\n            '&lon=' + lon + '&units=metric&appid=' + API_key\n        );\n    }\n\n    /**\n     * Picks a color to represent a temperature\n     * @param temp - Temperature in Celsius\n     * @returns A hex color code:\n     * - Blue for freezing (≤5°C)\n     * - Green for cool (≤12°C)\n     * - Yellow for mild (≤17°C)\n     * - Orange for warm (≤25°C)\n     * - Red for hot (>25°C)\n     */\n    getTemperatureColour(temp: number) {\n        if (temp \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridComponent.html":{"url":"components/GridComponent.html","title":"component - GridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/grid.component.ts\n\n\n\n    \n        Description\n    \n    \n        Grid component that displays listing data using AG Grid.\nProvides features like pagination, filtering, and animated cell changes.\nthis implements the AG Grid to display property listings data with:\n\nColumn filtering\nFloating filters\nPagination\nAnimated cell changes\nResponsive design\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                WebService\n                \n            \n\n\n            \n                selector\n                grid\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                            AgGridAngular\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./grid.component.html\n            \n\n\n\n            \n                styleUrl\n                ./grid.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                headings\n                            \n                            \n                                modules\n                            \n                            \n                                pagination\n                            \n                            \n                                paginationPageSize\n                            \n                            \n                                paginationPageSizeSelector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(webService: WebService)\n                    \n                \n                        \n                            \n                                Defined in src/app/grid.component.ts:88\n                            \n                        \n\n                \n                    \n                            Creates an instance of GridComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        webService\n                                                  \n                                                        \n                                                                        WebService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for fetching listing data\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/grid.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that runs after component initialization.\nFetches all listings data from the web service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/grid.component.ts:66\n                        \n                    \n\n            \n                \n                    Array to store the grid data fetched from the web service\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ColDef[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        { field: \"name\" },\n        { field: \"accommodates\", filter: true, floatingFilter: true },\n        { field: \"bedrooms\", filter: true, floatingFilter: true },\n        { field: \"bathrooms\", filter: true, floatingFilter: true },\n        { field: \"price\", filter: true, floatingFilter: true },\n        { \n            field: 'review_scores_rating', \n            headerName: 'Rating', \n            filter: true, \n            floatingFilter: true, \n            cellRenderer: 'agAnimateShowChangeCellRenderer', \n            cellRendererParams: { flashDelay: 1000 }\n        },\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/grid.component.ts:49\n                        \n                    \n\n            \n                \n                    Column definitions for AG Grid.\nConfigures the display and behavior of each column in the grid.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modules\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n        ClientSideRowModelModule, \n        ValidationModule, \n        TextFilterModule, \n        NumberFilterModule,\n        PaginationModule,\n        HighlightChangesModule\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/grid.component.ts:72\n                        \n                    \n\n            \n                \n                    AG Grid modules required for grid functionality.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/grid.component.ts:82\n                        \n                    \n\n            \n                \n                    Enable grid pagination\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationPageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/grid.component.ts:85\n                        \n                    \n\n            \n                \n                    Number of rows per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginationPageSizeSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [10, 25, 50, 100]\n                    \n                \n                    \n                        \n                                Defined in src/app/grid.component.ts:88\n                        \n                    \n\n            \n                \n                    Available options for rows per page\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { WebService } from './web.service';\nimport { AgGridAngular } from 'ag-grid-angular';\nimport { \n    ColDef, \n    ClientSideRowModelModule, \n    ValidationModule, \n    TextFilterModule, \n    NumberFilterModule,\n    PaginationModule,\n    HighlightChangesModule\n} from 'ag-grid-community';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Grid component that displays listing data using AG Grid.\n * Provides features like pagination, filtering, and animated cell changes.\n * \n * @class GridComponent\n * @implements {Component}\n * \n * @description\n * this implements the AG Grid to display property listings data with:\n * - Column filtering\n * - Floating filters\n * - Pagination\n * - Animated cell changes\n * - Responsive design\n */\n@Component({\n    selector: 'grid',\n    standalone: true,\n    imports: [RouterOutlet, AgGridAngular, CommonModule],\n    providers: [WebService],\n    templateUrl: './grid.component.html',\n    styleUrl: './grid.component.css'\n})\nexport class GridComponent {\n    /**\n     * Column definitions for AG Grid.\n     * Configures the display and behavior of each column in the grid.\n     * \n     * @type {ColDef[]}\n     * @property {string} field - The data field to display\n     * @property {boolean} filter - Whether filtering is enabled\n     * @property {boolean} floatingFilter - Whether to show filter input in header\n     */\n    headings: ColDef[] = [\n        { field: \"name\" },\n        { field: \"accommodates\", filter: true, floatingFilter: true },\n        { field: \"bedrooms\", filter: true, floatingFilter: true },\n        { field: \"bathrooms\", filter: true, floatingFilter: true },\n        { field: \"price\", filter: true, floatingFilter: true },\n        { \n            field: 'review_scores_rating', \n            headerName: 'Rating', \n            filter: true, \n            floatingFilter: true, \n            cellRenderer: 'agAnimateShowChangeCellRenderer', \n            cellRendererParams: { flashDelay: 1000 }\n        },\n    ];\n\n    /** Array to store the grid data fetched from the web service */\n    data: any = [];\n\n    /**\n     * AG Grid modules required for grid functionality.\n     * @type {Array}\n     */\n    modules = [\n        ClientSideRowModelModule, \n        ValidationModule, \n        TextFilterModule, \n        NumberFilterModule,\n        PaginationModule,\n        HighlightChangesModule\n    ]; \n\n    /** Enable grid pagination */\n    pagination = true;\n\n    /** Number of rows per page */\n    paginationPageSize = 10;\n\n    /** Available options for rows per page */\n    paginationPageSizeSelector = [10, 25, 50, 100];\n\n    /**\n     * Creates an instance of GridComponent.\n     * @constructor\n     * @param {WebService} webService - Service for fetching listing data\n     */\n    constructor(private webService: WebService) { }\n\n    /**\n     * Lifecycle hook that runs after component initialization.\n     * Fetches all listings data from the web service.\n     * \n     * @method ngOnInit\n     * @memberof GridComponent\n     */\n    ngOnInit() {\n        this.webService.getAllListings()\n            .subscribe((response) => {\n                this.data = response;\n            });\n    }\n}\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthButtonComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'GridComponent', 'selector': 'grid'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListingComponent', 'selector': 'listing'},{'name': 'ListingsComponent', 'selector': 'listings'},{'name': 'NavComponent', 'selector': 'navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                loading\n                            \n                            \n                                priceRanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fetchPriceRangeSummary\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(webService: WebService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        webService\n                                                  \n                                                        \n                                                                        WebService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service used to fetch price range summary data from the backend.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fetchPriceRangeSummary\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchPriceRangeSummary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Fetches the price range summary data from the backend.\nPopulates the priceRanges array and handles loading and error states.\nEach price range object in the response is extended with a showListings property\nto toggle the display of individual listings.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called when the component is initialized.\nInitiates the data fetching process for the price range summary.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priceRanges\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home.component.ts:23\n                        \n                    \n\n            \n                \n                    Example :                                 and listings for each range.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WebService } from './web.service';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    standalone: true,\n    imports: [CommonModule]\n})\nexport class HomeComponent implements OnInit {\n    /**\n     * @property {Array} priceRanges - Array of price range objects containing the range, count, percentage, \n     *                                      and listings for each range.\n     */\n    priceRanges: any[] = [];\n\n    /**\n     * @property {boolean} loading - Indicates whether the component is currently fetching data.\n     */\n    loading = false;\n\n    /**\n     * @property {boolean} error - Indicates whether there was an error fetching data.\n     */\n    error = false;\n\n    /**\n     * @constructor\n     * @param {WebService} webService - The service used to fetch price range summary data from the backend.\n     */\n    constructor(private webService: WebService) {}\n\n    /**\n     * Lifecycle hook called when the component is initialized.\n     * Initiates the data fetching process for the price range summary.\n     * \n     * @returns {void}\n     */\n    ngOnInit(): void {\n        this.fetchPriceRangeSummary();\n    }\n\n    /**\n     * Fetches the price range summary data from the backend.\n     * Populates the `priceRanges` array and handles loading and error states.\n     * Each price range object in the response is extended with a `showListings` property \n     * to toggle the display of individual listings.\n     * \n     * @private\n     * @returns {void}\n     */\n    private fetchPriceRangeSummary(): void {\n        this.loading = true;\n        this.webService.getPriceRangeSummary().subscribe({\n            next: (response) => {\n                this.priceRanges = response.data.map(range => ({\n                    ...range,\n                    showListings: false\n                }));\n                this.loading = false;\n            },\n            error: (error) => {\n                console.error('Error fetching price range summary:', error);\n                this.error = true;\n                this.loading = false;\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n    Listing Price Distribution\n    \n    \n      \n        \n          {{ range.range }}\n          {{ range.count }} listings\n        \n        \n        \n        \n          \n          \n        \n        \n        \n          {{ range.percentage }}% of total listings\n        \n        \n        \n        \n          \n            {{ range.showListings ? 'Hide' : 'Show' }} Listings\n          \n          \n          \n            \n              {{ listing.name }}\n              ${{ listing.price }} per night\n            \n          \n        \n      \n    \n    \n    \n      Loading price range data...\n    \n    \n    \n      Error loading price range data. Please try again later.\n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Listing Price Distribution                                {{ range.range }}          {{ range.count }} listings                                                                                      {{ range.percentage }}% of total listings                                                      {{ range.showListings ? \\'Hide\\' : \\'Show\\' }} Listings                                                        {{ listing.name }}              ${{ listing.price }} per night                                                      Loading price range data...                  Error loading price range data. Please try again later.        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthButtonComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'GridComponent', 'selector': 'grid'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListingComponent', 'selector': 'listing'},{'name': 'ListingsComponent', 'selector': 'listings'},{'name': 'NavComponent', 'selector': 'navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListingsComponent.html":{"url":"components/ListingsComponent.html","title":"component - ListingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/airbnb.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying and managing paginated property listings.\nHandles data fetching, page navigation, and session storage for page persistence.\nProvides functionality for:\n\nDisplaying property listings\nPagination controls\nSession-based page persistence\nData fetching from WebService\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                DataService\n                                WebService\n                \n            \n\n\n            \n                selector\n                listings\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./airbnb.component.html\n            \n\n\n\n            \n                styleUrl\n                ./airbnb.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataService\n                            \n                            \n                                listings_list\n                            \n                            \n                                page\n                            \n                            \n                                    Public\n                                webService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                previousPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, webService: WebService)\n                    \n                \n                        \n                            \n                                Defined in src/app/airbnb.component.ts:32\n                            \n                        \n\n                \n                    \n                            Creates an instance of ListingsComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for utility data operations\n\n\n                                                        \n                                                \n                                                \n                                                        webService\n                                                  \n                                                        \n                                                                        WebService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for fetching listing data\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nextPage\n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/airbnb.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Navigates to the next page of listings if available.\nUpdates session storage and fetches new listings data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/airbnb.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that runs on component initialization.\nRestores the page number from session storage if available\nand fetches the initial set of listings.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousPage\n                        \n                    \n                \n            \n            \n                \npreviousPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/airbnb.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Navigates to the previous page of listings if available.\nUpdates session storage and fetches new listings data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dataService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/airbnb.component.ts:41\n                        \n                    \n\n            \n                \n                    - Service for utility data operations\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listings_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/airbnb.component.ts:29\n                        \n                    \n\n            \n                \n                    Current list of property listings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/airbnb.component.ts:32\n                        \n                    \n\n            \n                \n                    Current page number, defaults to 1\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        webService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WebService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/airbnb.component.ts:41\n                        \n                    \n\n            \n                \n                    - Service for fetching listing data\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet, RouterModule } from '@angular/router';\nimport { DataService } from './data.service';\nimport { WebService } from './web.service';\n\n/**\n * Component for displaying and managing paginated property listings.\n * Handles data fetching, page navigation, and session storage for page persistence.\n * \n * @class ListingsComponent\n * @implements {Component}\n * \n * @description\n * Provides functionality for:\n * - Displaying property listings\n * - Pagination controls\n * - Session-based page persistence\n * - Data fetching from WebService\n */\n@Component({\n    selector: 'listings',\n    imports: [RouterOutlet, RouterModule],\n    providers: [DataService, WebService],\n    templateUrl: './airbnb.component.html',\n    styleUrl: './airbnb.component.css'\n})\nexport class ListingsComponent {\n    /** Current list of property listings */\n    listings_list: any;\n\n    /** Current page number, defaults to 1 */\n    page: number = 1;\n\n    /**\n     * Creates an instance of ListingsComponent.\n     * \n     * @constructor\n     * @param {DataService} dataService - Service for utility data operations\n     * @param {WebService} webService - Service for fetching listing data\n     */\n    constructor(public dataService: DataService, public webService: WebService) { }\n\n    /**\n     * Lifecycle hook that runs on component initialization.\n     * Restores the page number from session storage if available\n     * and fetches the initial set of listings.\n     * \n     * @method ngOnInit\n     */\n    ngOnInit() {\n        if (sessionStorage['page']) {\n            this.page = Number(sessionStorage['page']);\n        }\n        \n        this.webService.getListings(this.page)\n            .subscribe((response) => {\n                this.listings_list = response;\n            });\n    }\n\n    /**\n     * Navigates to the previous page of listings if available.\n     * Updates session storage and fetches new listings data.\n     * \n     * @method previousPage\n     */\n    previousPage() {\n        if (this.page > 1) {\n            this.page = this.page - 1;\n            sessionStorage['page'] = this.page;\n            this.webService.getListings(this.page).subscribe((response: any) => {\n                this.listings_list = response;\n            });\n        }\n    }\n\n    /**\n     * Navigates to the next page of listings if available.\n     * Updates session storage and fetches new listings data.\n     * \n     * @method nextPage\n     */\n    nextPage() {\n        if (this.page  {\n                this.listings_list = response;\n            });\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                @for (listing of listings_list; track listing.name) {\n                    \n                        \n                            \n                            \n                            \n                            \n                                \n                                    {{ listing.name }}\n                                    \n                                         {{ listing.review_scores_rating }}\n                                    \n                                \n                                \n                                {{ listing.property_type }}\n                                \n                                \n                                    {{ listing.bedrooms }} bedroom{{ listing.bedrooms !== 1 ? 's' : '' }} · \n                                    {{ listing.beds }} bed{{ listing.beds !== 1 ? 's' : '' }} · \n                                    {{ listing.bathrooms }} bath{{ listing.bathrooms !== 1 ? 's' : '' }}\n                                \n                                \n                                \n                                    @if (listing.amenities && listing.amenities.length > 0) {\n                                        @for (amenity of listing.amenities.slice(0, 3); track amenity) {\n                                            {{ amenity }}\n                                        }\n                                        @if (listing.amenities.length > 3) {\n                                            \n                                                +{{ listing.amenities.length - 3 }} more\n                                            \n                                        }\n                                    }\n                                \n                            \n                            \n                            \n                                \n                                    \n                                        ${{ listing.price }}\n                                        /night\n                                    \n                                    \n                                        Fits {{ listing.accommodates }} guests\n                                    \n                                \n                            \n                        \n                    \n                }\n            \n        \n    \n    \n    \n        \n            Previous\n        \n        \n            Showing Page {{ this.page }}\n            of {{ this.webService.getLastPageNumber() }}\n        \n        \n            Next\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        @for (listing of listings_list; track listing.name) {                                                                                                                                                                                                                                {{ listing.name }}                                                                             {{ listing.review_scores_rating }}                                                                                                                                    {{ listing.property_type }}                                                                                                    {{ listing.bedrooms }} bedroom{{ listing.bedrooms !== 1 ? \\'s\\' : \\'\\' }} ·                                     {{ listing.beds }} bed{{ listing.beds !== 1 ? \\'s\\' : \\'\\' }} ·                                     {{ listing.bathrooms }} bath{{ listing.bathrooms !== 1 ? \\'s\\' : \\'\\' }}                                                                                                                                    @if (listing.amenities && listing.amenities.length > 0) {                                        @for (amenity of listing.amenities.slice(0, 3); track amenity) {                                            {{ amenity }}                                        }                                        @if (listing.amenities.length > 3) {                                                                                            +{{ listing.amenities.length - 3 }} more                                                                                    }                                    }                                                                                                                                                                                                                                ${{ listing.price }}                                        /night                                                                                                                Fits {{ listing.accommodates }} guests                                                                                                                                                            }                                                    Previous                            Showing Page {{ this.page }}            of {{ this.webService.getLastPageNumber() }}                            Next            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthButtonComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'GridComponent', 'selector': 'grid'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListingComponent', 'selector': 'listing'},{'name': 'ListingsComponent', 'selector': 'listings'},{'name': 'NavComponent', 'selector': 'navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/nav.component.ts\n\n\n\n    \n        Description\n    \n    \n        Navigation component that serves as the main navigation container for the application.\nIntegrates routing functionality and authentication-related components.\nThis navbar component has:\n\nAngular Router functionality for navigation\nAuthentication button for login/logout actions\nUser authentication status display\n\nExample :\nSee AuthButtonComponent\nSee AuthUserComponent\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                navigation\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                            RouterModule\n                                AuthButtonComponent\n                                AuthUserComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet, RouterModule } from '@angular/router';\nimport { AuthButtonComponent } from './authbutton.component';\nimport { AuthUserComponent } from './authuser.component';\n\n/**\n * Navigation component that serves as the main navigation container for the application.\n * Integrates routing functionality and authentication-related components.\n * \n * @class NavComponent\n * @implements {Component}\n * \n * @description\n * This navbar component has:\n * - Angular Router functionality for navigation\n * - Authentication button for login/logout actions\n * - User authentication status display\n * \n * @example\n * \n * \n * \n * @see {@link AuthButtonComponent}\n * @see {@link AuthUserComponent}\n */\n@Component({\n  selector: 'navigation',\n  standalone: true,\n  imports: [RouterOutlet, RouterModule, AuthButtonComponent, AuthUserComponent],\n  templateUrl: './nav.component.html',\n})\nexport class NavComponent {\n  \n}\n\n    \n\n    \n        \n    \n        \n            \n            Airbnb Directory\n        \n        \n        \n            \n        \n\n        \n            \n                \n                    \n                        Home\n                    \n                \n                \n                    \n                        Listings\n                    \n                \n                \n                    \n                        Grid View\n                    \n                \n            \n            \n            \n                \n            \n        \n    \n\n\n\n.navbar {\n    padding-top: 0.7rem;\n    padding-bottom: 0.7rem;\n}\n\n.navbar-brand {\n    font-size: 1.4rem;\n    transition: color 0.2s ease;\n}\n\n.navbar-brand:hover {\n    color: #e3f2fd !important;\n}\n\n.nav-link {\n    position: relative;\n    font-weight: 500;\n    transition: color 0.2s ease;\n}\n\n.nav-link:hover {\n    color: #e3f2fd !important;\n}\n\n.nav-link.active {\n    color: #fff !important;\n}\n\n.nav-link.active::after {\n    content: '';\n    position: absolute;\n    bottom: -4px;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background-color: #fff;\n    border-radius: 2px;\n}\n\n@media (max-width: 576px) {\n    .nav-link {\n        padding: 0.5rem 0;\n    }\n    \n    .nav-link.active::after {\n        bottom: 0;\n    }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Airbnb Directory                                                                                                                            Home                                                                                                Listings                                                                                                Grid View                                                                                                                .navbar {    padding-top: 0.7rem;    padding-bottom: 0.7rem;}.navbar-brand {    font-size: 1.4rem;    transition: color 0.2s ease;}.navbar-brand:hover {    color: #e3f2fd !important;}.nav-link {    position: relative;    font-weight: 500;    transition: color 0.2s ease;}.nav-link:hover {    color: #e3f2fd !important;}.nav-link.active {    color: #fff !important;}.nav-link.active::after {    content: \\'\\';    position: absolute;    bottom: -4px;    left: 0;    width: 100%;    height: 2px;    background-color: #fff;    border-radius: 2px;}@media (max-width: 576px) {    .nav-link {        padding: 0.5rem 0;    }        .nav-link.active::after {        bottom: 0;    }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthButtonComponent', 'selector': 'auth-button'},{'name': 'AuthUserComponent', 'selector': 'user-profile'},{'name': 'GridComponent', 'selector': 'grid'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListingComponent', 'selector': 'listing'},{'name': 'ListingsComponent', 'selector': 'listings'},{'name': 'NavComponent', 'selector': 'navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PriceRangeResponse.html":{"url":"interfaces/PriceRangeResponse.html","title":"interface - PriceRangeResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PriceRangeResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/web.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            total_listings\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         PriceRangeSummary[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PriceRangeSummary[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_listings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_listings:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\nexport interface PriceRangeSummary {\n    range: string;\n    min: number;\n    max: number | null;\n    count: number;\n    percentage: number;\n    listings: {\n        id: string;\n        name: string;\n        price: string;\n    }[];\n}\n\nexport interface PriceRangeResponse {\n    data: PriceRangeSummary[];\n    total_listings: number;\n}\n\n/**\n * Service responsible for handling all HTTP communications with the listings API.\n * Provides methods for CRUD operations on listings and reviews.\n * @class WebService\n * @injectable\n */\n@Injectable()\nexport class WebService {\n    /** Number of items to display per page */\n    pageSize: number = 6;\n    \n    /** Total number of listings in the database */\n    private totalListings: number = 0;\n\n    /**\n     * Creates an instance of WebService and initializes total listings count.\n     * @constructor\n     * @param {HttpClient} http - The Angular HTTP client for making API requests\n     */\n    constructor(private http: HttpClient) {\n        this.getAllListings().subscribe(response => {\n            this.totalListings = response.length;\n        });\n    }\n\n    /**\n     * Retrieves a paginated list of listings.\n     * @param {number} page - The page number to retrieve\n     * @returns {Observable} Observable containing the paginated listings\n     */\n    getListings(page: number) {\n        return this.http.get(\n            'http://127.0.0.1:5000/api/v1.0/listings?pn=' + page + '&ps=' + this.pageSize\n        );\n    }\n\n    /**\n     * Retrieves a specific listing by ID.\n     * @param {any} id - The ID of the listing to retrieve\n     * @returns {Observable} Observable containing the listing details\n     */\n    getListing(id: any) {\n        return this.http.get(\n            'http://127.0.0.1:5000/api/v1.0/listings/' + id);\n    }\n\n    /**\n     * Posts a new review for a specific listing.\n     * @param {any} id - The ID of the listing to review\n     * @param {Object} review - The review details\n     * @param {string} review.user_name - Name of the reviewer\n     * @param {string} review.comments - Review content\n     * @param {string} review.date - Date of the review\n     * @returns {Observable} Observable containing the created review\n     */\n    postReview(id: any, review: any) {\n        let postData = new FormData();\n        postData.append('user_name', review.user_name);\n        postData.append('comments', review.comments);\n        postData.append('date', review.date);\n        return this.http.post('http://127.0.0.1:5000/api/v1.0/listings/' + id + '/reviews', postData);\n    }\n\n    /**\n     * Retrieves all reviews for a specific listing.\n     * @param {any} id - The ID of the listing to get reviews for\n     * @returns {Observable} Observable containing the listing's reviews\n     */\n    getReviews(id: any) {\n        return this.http.get('http://127.0.0.1:5000/api/v1.0/listings/' + id + '/reviews');\n    }\n\n    /**\n     * Retrieves all listings without pagination.\n     * @returns {Observable} Observable containing all listings\n     */\n    getAllListings() {\n        return this.http.get(\n            'http://127.0.0.1:5000/api/v1.0/listings?pn=1&ps=3000');\n    }\n\n    /**\n     * Updates an existing listing.\n     * @param {string} id - The ID of the listing to update\n     * @param {Object} listing - The updated listing details\n     * @param {string} listing.name - Name of the property\n     * @param {string} listing.description - Property description\n     * @param {string} listing.property_type - Type of property\n     * @param {string} listing.room_type - Type of room\n     * @param {number} listing.accomodates - Number of guests that can be accommodated\n     * @param {number} listing.bathrooms - Number of bathrooms\n     * @param {number} listing.bedrooms - Number of bedrooms\n     * @param {number} listing.beds - Number of beds\n     * @param {string} listing.amenities - Available amenities\n     * @param {number} listing.price - Price per night\n     * @param {number} listing.minimum_nights - Minimum stay duration\n     * @param {number} listing.maximum_nights - Maximum stay duration\n     * @param {number} listing.review_scores_rating - Overall review score\n     * @param {number} listing.review_scores_location - Location review score\n     * @param {string} listing.neighbourhood - Property neighborhood\n     * @returns {Observable} Observable containing the updated listing\n     */\n    updateListing(id: string, listing: any) {\n        let postData = new FormData();\n        postData.append('name', listing.name);\n        postData.append('description', listing.description);\n        postData.append('property_type', listing.property_type);\n        postData.append('room_type', listing.room_type);\n        postData.append('accomodates', listing.accomodates);\n        postData.append('bathrooms', listing.bathrooms);\n        postData.append('bedrooms', listing.bedrooms);\n        postData.append('beds', listing.beds);\n        postData.append('amenities', listing.amenities);\n        postData.append('price', listing.price);\n        postData.append('minimum_nights', listing.minimum_nights);\n        postData.append('maximum_nights', listing.maximum_nights);\n        postData.append('review_scores_rating', listing.review_scores_rating);\n        postData.append('review_scores_location', listing.review_scores_location);\n        postData.append('neighbourhood', listing.neighbourhood);\n\n        return this.http.put('http://127.0.0.1:5000/api/v1.0/listings/' + id, postData);\n    }\n\n    /**\n     * Deletes a specific listing.\n     * @param {string} id - The ID of the listing to delete\n     * @returns {Observable} Observable containing the deletion response\n     */\n    deleteListing(id: string) {\n        return this.http.delete('http://127.0.0.1:5000/api/v1.0/listings/' + id);\n    }\n\n    /**\n     * Calculates the total number of pages based on total listings and page size.\n     * @returns {number} The last page number\n     */\n    getLastPageNumber() {\n        return Math.ceil(this.totalListings / this.pageSize);\n    }\n\n    /**\n     * Retrieves price range summary for all listings\n     * @returns {Observable} Observable containing the price range summary\n     */\n    getPriceRangeSummary() {\n        return this.http.get(\n            'http://127.0.0.1:5000/api/v1.0/listings/priceRangeSummary'\n        );\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PriceRangeSummary.html":{"url":"interfaces/PriceRangeSummary.html","title":"interface - PriceRangeSummary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PriceRangeSummary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/web.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            listings\n                                        \n                                \n                                \n                                        \n                                            max\n                                        \n                                \n                                \n                                        \n                                            min\n                                        \n                                \n                                \n                                        \n                                            percentage\n                                        \n                                \n                                \n                                        \n                                            range\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listings:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percentage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        percentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        range\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        range:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\nexport interface PriceRangeSummary {\n    range: string;\n    min: number;\n    max: number | null;\n    count: number;\n    percentage: number;\n    listings: {\n        id: string;\n        name: string;\n        price: string;\n    }[];\n}\n\nexport interface PriceRangeResponse {\n    data: PriceRangeSummary[];\n    total_listings: number;\n}\n\n/**\n * Service responsible for handling all HTTP communications with the listings API.\n * Provides methods for CRUD operations on listings and reviews.\n * @class WebService\n * @injectable\n */\n@Injectable()\nexport class WebService {\n    /** Number of items to display per page */\n    pageSize: number = 6;\n    \n    /** Total number of listings in the database */\n    private totalListings: number = 0;\n\n    /**\n     * Creates an instance of WebService and initializes total listings count.\n     * @constructor\n     * @param {HttpClient} http - The Angular HTTP client for making API requests\n     */\n    constructor(private http: HttpClient) {\n        this.getAllListings().subscribe(response => {\n            this.totalListings = response.length;\n        });\n    }\n\n    /**\n     * Retrieves a paginated list of listings.\n     * @param {number} page - The page number to retrieve\n     * @returns {Observable} Observable containing the paginated listings\n     */\n    getListings(page: number) {\n        return this.http.get(\n            'http://127.0.0.1:5000/api/v1.0/listings?pn=' + page + '&ps=' + this.pageSize\n        );\n    }\n\n    /**\n     * Retrieves a specific listing by ID.\n     * @param {any} id - The ID of the listing to retrieve\n     * @returns {Observable} Observable containing the listing details\n     */\n    getListing(id: any) {\n        return this.http.get(\n            'http://127.0.0.1:5000/api/v1.0/listings/' + id);\n    }\n\n    /**\n     * Posts a new review for a specific listing.\n     * @param {any} id - The ID of the listing to review\n     * @param {Object} review - The review details\n     * @param {string} review.user_name - Name of the reviewer\n     * @param {string} review.comments - Review content\n     * @param {string} review.date - Date of the review\n     * @returns {Observable} Observable containing the created review\n     */\n    postReview(id: any, review: any) {\n        let postData = new FormData();\n        postData.append('user_name', review.user_name);\n        postData.append('comments', review.comments);\n        postData.append('date', review.date);\n        return this.http.post('http://127.0.0.1:5000/api/v1.0/listings/' + id + '/reviews', postData);\n    }\n\n    /**\n     * Retrieves all reviews for a specific listing.\n     * @param {any} id - The ID of the listing to get reviews for\n     * @returns {Observable} Observable containing the listing's reviews\n     */\n    getReviews(id: any) {\n        return this.http.get('http://127.0.0.1:5000/api/v1.0/listings/' + id + '/reviews');\n    }\n\n    /**\n     * Retrieves all listings without pagination.\n     * @returns {Observable} Observable containing all listings\n     */\n    getAllListings() {\n        return this.http.get(\n            'http://127.0.0.1:5000/api/v1.0/listings?pn=1&ps=3000');\n    }\n\n    /**\n     * Updates an existing listing.\n     * @param {string} id - The ID of the listing to update\n     * @param {Object} listing - The updated listing details\n     * @param {string} listing.name - Name of the property\n     * @param {string} listing.description - Property description\n     * @param {string} listing.property_type - Type of property\n     * @param {string} listing.room_type - Type of room\n     * @param {number} listing.accomodates - Number of guests that can be accommodated\n     * @param {number} listing.bathrooms - Number of bathrooms\n     * @param {number} listing.bedrooms - Number of bedrooms\n     * @param {number} listing.beds - Number of beds\n     * @param {string} listing.amenities - Available amenities\n     * @param {number} listing.price - Price per night\n     * @param {number} listing.minimum_nights - Minimum stay duration\n     * @param {number} listing.maximum_nights - Maximum stay duration\n     * @param {number} listing.review_scores_rating - Overall review score\n     * @param {number} listing.review_scores_location - Location review score\n     * @param {string} listing.neighbourhood - Property neighborhood\n     * @returns {Observable} Observable containing the updated listing\n     */\n    updateListing(id: string, listing: any) {\n        let postData = new FormData();\n        postData.append('name', listing.name);\n        postData.append('description', listing.description);\n        postData.append('property_type', listing.property_type);\n        postData.append('room_type', listing.room_type);\n        postData.append('accomodates', listing.accomodates);\n        postData.append('bathrooms', listing.bathrooms);\n        postData.append('bedrooms', listing.bedrooms);\n        postData.append('beds', listing.beds);\n        postData.append('amenities', listing.amenities);\n        postData.append('price', listing.price);\n        postData.append('minimum_nights', listing.minimum_nights);\n        postData.append('maximum_nights', listing.maximum_nights);\n        postData.append('review_scores_rating', listing.review_scores_rating);\n        postData.append('review_scores_location', listing.review_scores_location);\n        postData.append('neighbourhood', listing.neighbourhood);\n\n        return this.http.put('http://127.0.0.1:5000/api/v1.0/listings/' + id, postData);\n    }\n\n    /**\n     * Deletes a specific listing.\n     * @param {string} id - The ID of the listing to delete\n     * @returns {Observable} Observable containing the deletion response\n     */\n    deleteListing(id: string) {\n        return this.http.delete('http://127.0.0.1:5000/api/v1.0/listings/' + id);\n    }\n\n    /**\n     * Calculates the total number of pages based on total listings and page size.\n     * @returns {number} The last page number\n     */\n    getLastPageNumber() {\n        return Math.ceil(this.totalListings / this.pageSize);\n    }\n\n    /**\n     * Retrieves price range summary for all listings\n     * @returns {Observable} Observable containing the price range summary\n     */\n    getPriceRangeSummary() {\n        return this.http.get(\n            'http://127.0.0.1:5000/api/v1.0/listings/priceRangeSummary'\n        );\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebService.html":{"url":"injectables/WebService.html","title":"injectable - WebService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WebService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/web.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for handling all HTTP communications with the listings API.\nProvides methods for CRUD operations on listings and reviews.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageSize\n                            \n                            \n                                    Private\n                                totalListings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteListing\n                            \n                            \n                                getAllListings\n                            \n                            \n                                getLastPageNumber\n                            \n                            \n                                getListing\n                            \n                            \n                                getListings\n                            \n                            \n                                getPriceRangeSummary\n                            \n                            \n                                getReviews\n                            \n                            \n                                postReview\n                            \n                            \n                                updateListing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/web.service.ts:35\n                            \n                        \n\n                \n                    \n                            Creates an instance of WebService and initializes total listings count.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular HTTP client for making API requests\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteListing\n                        \n                    \n                \n            \n            \n                \ndeleteListing(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:151\n                        \n                    \n\n\n            \n                \n                        Deletes a specific listing.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the listing to delete\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable containing the deletion response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllListings\n                        \n                    \n                \n            \n            \n                \ngetAllListings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:99\n                        \n                    \n\n\n            \n                \n                        Retrieves all listings without pagination.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable containing all listings\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastPageNumber\n                        \n                    \n                \n            \n            \n                \ngetLastPageNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:159\n                        \n                    \n\n\n            \n                \n                        Calculates the total number of pages based on total listings and page size.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                The last page number\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getListing\n                        \n                    \n                \n            \n            \n                \ngetListing(id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Retrieves a specific listing by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the listing to retrieve\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable containing the listing details\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getListings\n                        \n                    \n                \n            \n            \n                \ngetListings(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Retrieves a paginated list of listings.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe page number to retrieve\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable containing the paginated listings\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPriceRangeSummary\n                        \n                    \n                \n            \n            \n                \ngetPriceRangeSummary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:167\n                        \n                    \n\n\n            \n                \n                        Retrieves price range summary for all listings\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable containing the price range summary\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReviews\n                        \n                    \n                \n            \n            \n                \ngetReviews(id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Retrieves all reviews for a specific listing.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the listing to get reviews for\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable containing the listing's reviews\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postReview\n                        \n                    \n                \n            \n            \n                \npostReview(id: any, review: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Posts a new review for a specific listing.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the listing to review\n\n\n                                            \n                                        \n                                        \n                                                review\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe review details\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable containing the created review\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateListing\n                        \n                    \n                \n            \n            \n                \nupdateListing(id: string, listing: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/web.service.ts:125\n                        \n                    \n\n\n            \n                \n                        Updates an existing listing.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the listing to update\n\n\n                                            \n                                        \n                                        \n                                                listing\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated listing details\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable containing the updated listing\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                    \n                        \n                                Defined in src/app/web.service.ts:32\n                        \n                    \n\n            \n                \n                    Number of items to display per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        totalListings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/web.service.ts:35\n                        \n                    \n\n            \n                \n                    Total number of listings in the database\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\nexport interface PriceRangeSummary {\n    range: string;\n    min: number;\n    max: number | null;\n    count: number;\n    percentage: number;\n    listings: {\n        id: string;\n        name: string;\n        price: string;\n    }[];\n}\n\nexport interface PriceRangeResponse {\n    data: PriceRangeSummary[];\n    total_listings: number;\n}\n\n/**\n * Service responsible for handling all HTTP communications with the listings API.\n * Provides methods for CRUD operations on listings and reviews.\n * @class WebService\n * @injectable\n */\n@Injectable()\nexport class WebService {\n    /** Number of items to display per page */\n    pageSize: number = 6;\n    \n    /** Total number of listings in the database */\n    private totalListings: number = 0;\n\n    /**\n     * Creates an instance of WebService and initializes total listings count.\n     * @constructor\n     * @param {HttpClient} http - The Angular HTTP client for making API requests\n     */\n    constructor(private http: HttpClient) {\n        this.getAllListings().subscribe(response => {\n            this.totalListings = response.length;\n        });\n    }\n\n    /**\n     * Retrieves a paginated list of listings.\n     * @param {number} page - The page number to retrieve\n     * @returns {Observable} Observable containing the paginated listings\n     */\n    getListings(page: number) {\n        return this.http.get(\n            'http://127.0.0.1:5000/api/v1.0/listings?pn=' + page + '&ps=' + this.pageSize\n        );\n    }\n\n    /**\n     * Retrieves a specific listing by ID.\n     * @param {any} id - The ID of the listing to retrieve\n     * @returns {Observable} Observable containing the listing details\n     */\n    getListing(id: any) {\n        return this.http.get(\n            'http://127.0.0.1:5000/api/v1.0/listings/' + id);\n    }\n\n    /**\n     * Posts a new review for a specific listing.\n     * @param {any} id - The ID of the listing to review\n     * @param {Object} review - The review details\n     * @param {string} review.user_name - Name of the reviewer\n     * @param {string} review.comments - Review content\n     * @param {string} review.date - Date of the review\n     * @returns {Observable} Observable containing the created review\n     */\n    postReview(id: any, review: any) {\n        let postData = new FormData();\n        postData.append('user_name', review.user_name);\n        postData.append('comments', review.comments);\n        postData.append('date', review.date);\n        return this.http.post('http://127.0.0.1:5000/api/v1.0/listings/' + id + '/reviews', postData);\n    }\n\n    /**\n     * Retrieves all reviews for a specific listing.\n     * @param {any} id - The ID of the listing to get reviews for\n     * @returns {Observable} Observable containing the listing's reviews\n     */\n    getReviews(id: any) {\n        return this.http.get('http://127.0.0.1:5000/api/v1.0/listings/' + id + '/reviews');\n    }\n\n    /**\n     * Retrieves all listings without pagination.\n     * @returns {Observable} Observable containing all listings\n     */\n    getAllListings() {\n        return this.http.get(\n            'http://127.0.0.1:5000/api/v1.0/listings?pn=1&ps=3000');\n    }\n\n    /**\n     * Updates an existing listing.\n     * @param {string} id - The ID of the listing to update\n     * @param {Object} listing - The updated listing details\n     * @param {string} listing.name - Name of the property\n     * @param {string} listing.description - Property description\n     * @param {string} listing.property_type - Type of property\n     * @param {string} listing.room_type - Type of room\n     * @param {number} listing.accomodates - Number of guests that can be accommodated\n     * @param {number} listing.bathrooms - Number of bathrooms\n     * @param {number} listing.bedrooms - Number of bedrooms\n     * @param {number} listing.beds - Number of beds\n     * @param {string} listing.amenities - Available amenities\n     * @param {number} listing.price - Price per night\n     * @param {number} listing.minimum_nights - Minimum stay duration\n     * @param {number} listing.maximum_nights - Maximum stay duration\n     * @param {number} listing.review_scores_rating - Overall review score\n     * @param {number} listing.review_scores_location - Location review score\n     * @param {string} listing.neighbourhood - Property neighborhood\n     * @returns {Observable} Observable containing the updated listing\n     */\n    updateListing(id: string, listing: any) {\n        let postData = new FormData();\n        postData.append('name', listing.name);\n        postData.append('description', listing.description);\n        postData.append('property_type', listing.property_type);\n        postData.append('room_type', listing.room_type);\n        postData.append('accomodates', listing.accomodates);\n        postData.append('bathrooms', listing.bathrooms);\n        postData.append('bedrooms', listing.bedrooms);\n        postData.append('beds', listing.beds);\n        postData.append('amenities', listing.amenities);\n        postData.append('price', listing.price);\n        postData.append('minimum_nights', listing.minimum_nights);\n        postData.append('maximum_nights', listing.maximum_nights);\n        postData.append('review_scores_rating', listing.review_scores_rating);\n        postData.append('review_scores_location', listing.review_scores_location);\n        postData.append('neighbourhood', listing.neighbourhood);\n\n        return this.http.put('http://127.0.0.1:5000/api/v1.0/listings/' + id, postData);\n    }\n\n    /**\n     * Deletes a specific listing.\n     * @param {string} id - The ID of the listing to delete\n     * @returns {Observable} Observable containing the deletion response\n     */\n    deleteListing(id: string) {\n        return this.http.delete('http://127.0.0.1:5000/api/v1.0/listings/' + id);\n    }\n\n    /**\n     * Calculates the total number of pages based on total listings and page size.\n     * @returns {number} The last page number\n     */\n    getLastPageNumber() {\n        return Math.ceil(this.totalListings / this.pageSize);\n    }\n\n    /**\n     * Retrieves price range summary for all listings\n     * @returns {Observable} Observable containing the price range summary\n     */\n    getPriceRangeSummary() {\n        return this.http.get(\n            'http://127.0.0.1:5000/api/v1.0/listings/priceRangeSummary'\n        );\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/airbnb.component.ts\n            \n            component\n            ListingsComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/authbutton.component.ts\n            \n            component\n            AuthButtonComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/authuser.component.ts\n            \n            component\n            AuthUserComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/data.service.ts\n            \n            injectable\n            DataService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/grid.component.ts\n            \n            component\n            GridComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/home.component.ts\n            \n            component\n            HomeComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/listing.component.ts\n            \n            component\n            ListingComponent\n            \n                55 %\n                (20/36)\n            \n        \n        \n            \n                \n                src/app/nav.component.ts\n            \n            component\n            NavComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/web.service.ts\n            \n            injectable\n            WebService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/web.service.ts\n            \n            interface\n            PriceRangeResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/web.service.ts\n            \n            interface\n            PriceRangeSummary\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.0.0\n        \n            @angular/common : ^19.0.0\n        \n            @angular/compiler : ^19.0.0\n        \n            @angular/core : ^19.0.0\n        \n            @angular/forms : ^19.0.0\n        \n            @angular/google-maps : ^19.0.3\n        \n            @angular/platform-browser : ^19.0.0\n        \n            @angular/platform-browser-dynamic : ^19.0.0\n        \n            @angular/router : ^19.0.0\n        \n            @auth0/auth0-angular : ^2.2.3\n        \n            @compodoc/compodoc : ^1.1.26\n        \n            ag-grid-angular : ^33.0.1\n        \n            bootstrap : ^5.3.3\n        \n            jquery : ^3.7.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAirbnbFE\nThis project was generated using Angular CLI version 19.0.4.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Core application providers array\n   * @property {Function} provideZoneChangeDetection - Configures Zone.js change detection\n   * @property {Object} eventCoalescing - Enables batching of multiple change detection runs\n   * @property {Function} provideRouter - Sets up routing using defined routes\n   * @property {Function} provideHttpClient - Enables HTTP capabilities\n   */\n  providers: [\n      provideZoneChangeDetection({ eventCoalescing: true }),  // Optimizes change detection\n      provideRouter(routes),                                  // Sets up routing\n      provideHttpClient()                                     // Enables HTTP requests\n  ]\n}\n                    \n                \n\n            \n                \n                    Core configuration for the Angular application.\nSets up essential providers for routing, HTTP, and change detection.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
